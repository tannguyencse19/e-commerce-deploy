{"version":3,"sources":["views/Cart/Checkout/Bill.jsx","views/Cart/Checkout/FormInput.jsx","views/Cart/Checkout/Form.jsx","views/Cart/Checkout/Checkout.jsx"],"names":["BillInfo","products","title","quantity","total","subtotal","shipping_fee","CheckoutBill","control","useFormContext","useFormState","isSubmitting","submitCount","colorMode","useColorMode","variant","isNumeric","length","map","item","idx","type","colorScheme","isLoading","sitekey","onChange","value","console","log","theme","FormInput","registerName","label","rule","useController","name","rules","defaultValue","field","onBlur","ref","error","fieldState","isInvalid","placeholder","message","defaultProps","undefined","required","ruleName","pattern","ruleNumber","validate","positive","v","parseInt","Form","register","React","useState","OtherAddress","setOtherAddress","inputProp","spacing","direction","isChecked","checked","target","CartCheckout","methods","useForm","onSubmit","data","a","sleepAwait","handleSubmit","py","px","flexBasis","p","background","useColorModeValue","lightModeContainerColor","darkModeContainerColor","Bill"],"mappings":"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","file":"static/js/16.735d47ae.chunk.js","sourcesContent":["import {\r\n  Text,\r\n  Stack,\r\n  Divider,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Button,\r\n  useColorMode,\r\n  LightMode\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { useFormContext, useFormState } from \"react-hook-form\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nconst BillInfo = {\r\n  products: [\r\n    {\r\n      title: \"Fresh Blackberry\",\r\n      quantity: 2,\r\n      total: 720,\r\n    },\r\n    {\r\n      title: \"Tomatoes\",\r\n      quantity: 2,\r\n      total: 440,\r\n    },\r\n    {\r\n      title: \"Italy Brocoli\",\r\n      quantity: 5,\r\n      total: 500,\r\n    },\r\n  ],\r\n  subtotal: 1660,\r\n  shipping_fee: 50,\r\n  total: 1710,\r\n};\r\n\r\nconst CheckoutBill = () => {\r\n  const { control } = useFormContext();\r\n  const { isSubmitting, submitCount } = useFormState({\r\n    control,\r\n  });\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <Stack>\r\n      <Text>Your Order</Text>\r\n      <Divider />\r\n      <Table variant=\"unstyled\">\r\n        <Thead>\r\n          <Tr>\r\n            <Th>Product</Th>\r\n            <Th>Quantity</Th>\r\n            <Th isNumeric>Total</Th>\r\n          </Tr>\r\n        </Thead>\r\n\r\n        <Tbody>\r\n          {BillInfo.products.length > 0 &&\r\n            BillInfo.products.map((item, idx) => (\r\n              <Tr key={`item-${idx}`}>\r\n                <Td>{item.title}</Td>\r\n                <Td isNumeric>{item.quantity}</Td>\r\n                <Td isNumeric>{item.total}.00$</Td>\r\n              </Tr>\r\n            ))}\r\n        </Tbody>\r\n\r\n        <Tfoot>\r\n          <Tr>\r\n            <Th>Subtotal</Th>\r\n            <Th></Th>\r\n            <Th>{BillInfo.subtotal}</Th>\r\n          </Tr>\r\n          <Tr>\r\n            <Th>Shipping Fee</Th>\r\n            <Th></Th>\r\n            <Th>{BillInfo.shipping_fee}</Th>\r\n          </Tr>\r\n          <Tr>\r\n            <Th>Total</Th>\r\n            <Th></Th>\r\n            <Th>{BillInfo.total}</Th>\r\n          </Tr>\r\n        </Tfoot>\r\n      </Table>\r\n\r\n      <LightMode>\r\n        <Button type=\"submit\" colorScheme=\"orange\" isLoading={isSubmitting}>\r\n          Go to Payment\r\n        </Button>\r\n      </LightMode>\r\n\r\n      {submitCount && (\r\n        <ReCAPTCHA\r\n          sitekey=\"6LdXnlodAAAAABP36XI-yuACjPF3CEOQdU6FNyPa\"\r\n          onChange={(value) => console.log(value)}\r\n          theme={colorMode}\r\n        />\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default CheckoutBill;\r\n","import React from \"react\";\nimport {\n  FormErrorMessage,\n  FormLabel,\n  FormControl,\n  Input,\n} from \"@chakra-ui/react\";\nimport { useController } from \"react-hook-form\";\n\nconst FormInput = ({\n  registerName,\n  label,\n  type,\n  rule,\n  control\n}) => {\n  const {\n    field: { onChange, onBlur, name, value, ref },\n    fieldState: { error },\n  } = useController({\n    name: registerName,\n    control: control,\n    rules: rule,\n    defaultValue: \"\",\n  });\n\n  return (\n    <FormControl isInvalid={error}>\n      <FormLabel>\n        {label}\n        <Input\n          placeholder=\"e.g: John\"\n          type={type}\n          onChange={onChange}\n          onBlur={onBlur}\n          value={value}\n          name={name}\n          ref={ref}\n        />\n      </FormLabel>\n\n      <FormErrorMessage>\n        {error && error.message}\n      </FormErrorMessage>\n    </FormControl>\n  );\n};\n\nFormInput.defaultProps = {\n  registerName: undefined,\n  label: undefined,\n  type: \"text\",\n  rule: {\n    required: \"This is required\",\n  },\n  control: null,\n};\n\nexport default FormInput;\n","import { useFormContext } from \"react-hook-form\";\nimport React from \"react\";\nimport { FormLabel, Textarea, Text, Stack, Checkbox } from \"@chakra-ui/react\";\nimport FormInput from \"./FormInput\";\n\nconst ruleName = {\n  required: \"This is required\",\n  pattern: {\n    value: /[A-Za-z]/,\n    message: \"violate regex\",\n  },\n};\n\nconst ruleNumber = {\n  required: \"This is required\",\n  // max: {\n  //   value: 3,\n  //   message: 'error message'\n  // },\n  validate: {\n    positive: (v) => parseInt(v) > 0 || \"should be greater than 0\",\n    // checkUrl: async () => (await fetch()) || \"error message\",\n  },\n  pattern: {\n    value: /[0-9+]/,\n    message: \"violate regex\",\n  },\n};\n\nconst Form = () => {\n  const { register, control } = useFormContext();\n  const [OtherAddress, setOtherAddress] = React.useState(false);\n\n  // Phai lam vay vi moi form la mot obj khac nhau\n  const inputProp = {\n    control: control,\n  };\n\n  return (\n    <Stack spacing=\"5\">\n      <Stack direction=\"row\">\n        <FormInput\n          {...inputProp}\n          registerName=\"firstName\"\n          label=\"First name\"\n          rule={ruleName}\n        />\n        <FormInput\n          {...inputProp}\n          registerName=\"lastName\"\n          label=\"Last name\"\n          rule={ruleName}\n        />\n      </Stack>\n\n      <Stack direction=\"row\">\n        <FormInput\n          {...inputProp}\n          registerName=\"phone\"\n          type=\"tel\"\n          label=\"Phone number\"\n          rule={ruleNumber}\n        />\n\n        <FormInput\n          {...inputProp}\n          registerName=\"email\"\n          type=\"email\"\n          label=\"Email\"\n        />\n      </Stack>\n\n      <FormInput {...inputProp} registerName=\"address\" label=\"Address\" />\n\n      <FormInput\n        {...inputProp}\n        registerName=\"zip\"\n        type=\"number\"\n        label=\"Zipcode\"\n        rule={ruleNumber}\n      />\n\n      <Text>Shipping Details</Text>\n      <Checkbox\n        isChecked={OtherAddress}\n        onChange={({ target: { checked } }) => setOtherAddress(checked)}\n      >\n        Ship to a different address?\n      </Checkbox>\n      {OtherAddress && (\n        <FormInput\n          {...inputProp}\n          registerName=\"otherAddress\"\n          label=\"Other Address\"\n        />\n      )}\n\n      <FormLabel>\n        Order notes\n        <Textarea\n          placeholder=\"e.g: Call me when you arrive\"\n          {...register(\"notes\")}\n        />\n      </FormLabel>\n    </Stack>\n  );\n};\n\nexport default Form;\n","import { Stack, Box, useColorModeValue } from \"@chakra-ui/react\";\nimport Bill from \"./Bill\";\nimport Form from \"./Form\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport {\n  darkModeContainerColor,\n  lightModeContainerColor,\n  sleepAwait,\n} from \"../../../utils/Helper\";\n\nconst CartCheckout = () => {\n  const methods = useForm();\n\n  const onSubmit = async (data) => {\n    // fetch(\"http://localhost:4000/create-checkout-session\", {\n    //   method: \"POST\",\n    //   // headers: { \"Content-Type\": \"application/json\" },\n    //   // body: JSON.stringify(data),\n    // });\n    await sleepAwait(2000);\n    console.log(data);\n    // window.location = \"http://localhost:4000/create-checkout-session\"; // xai tam thoi\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={methods.handleSubmit(onSubmit)}>\n        <Stack direction=\"row\" py=\"5\" px=\"10\" spacing=\"5\">\n          <Box\n            flexBasis=\"70%\"\n            p=\"10\"\n            background={useColorModeValue(\n              lightModeContainerColor,\n              darkModeContainerColor\n            )}\n          >\n            <Form />\n          </Box>\n          <Box\n            flexBasis=\"30%\"\n            p=\"10\"\n            background={useColorModeValue(\n              lightModeContainerColor,\n              darkModeContainerColor\n            )}\n          >\n            <Bill />\n          </Box>\n        </Stack>\n      </form>\n    </FormProvider>\n  );\n};\n\nexport default CartCheckout;\n"],"sourceRoot":""}