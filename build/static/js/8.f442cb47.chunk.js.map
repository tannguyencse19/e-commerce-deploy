{"version":3,"sources":["utils/Rating.jsx","utils/useFetch.js","views/Product/Summary.jsx","utils/Carousel.jsx","views/Product/Related.jsx","views/Cart/Details/DataTable.jsx","views/Cart/Details/Details.jsx"],"names":["Rating","React","forwardRef","ref","size","scale","fillColor","strokeColor","ratingProp","buttons","RatingButton","idx","fill","as","aria-label","height","width","_focus","outline","boxSize","color","stroke","fillOpacity","i","push","isInline","useFetch","link","useState","Products","setProducts","isLoading","setIsLoading","isError","setIsError","useEffect","fetch","then","res","json","catch","err","finally","ProductSummary","image","title","rating","price","isHover","spacing","_hover","transform","cursor","transitionDuration","align","base","lg","background","useColorModeValue","lightModeContainerColor","darkModeContainerColor","px","py","h","src","fit","mx","fontFamily","fontSize","maxW","rate","justifyContent","fontWeight","SwiperCore","use","Navigation","Pagination","Carousel","drag","numOfSlides","padding","children","useMediaQuery","largerThanLg","navigation","pagination","spaceBetween","slidesPerView","grabCursor","simulateTouch","style","defaultProps","ProductRelated","process","AllProducts","AllProductLoading","useBreakpointValue","direction","xl","justify","map","p","mt","noOfLines","item","key","DataTable","Cart","CartIsLoading","CartProducts","setCartProducts","Subtotal","setSubtotal","Total","setTotal","Sales","setSales","id","name","percent_off","valid","Coupon","setCoupon","obj","Object","keys","length","getPrototypeOf","prototype","hasOwnProperty","products","result","filter","some","el","productId","forEach","quantity","total","sum","reduce","prevItem","nextItem","couponInput","useRef","prevState","flexBasis","isNumeric","step","defaultValue","min","onChange","val","parseInt","handleStepper","variant","toFixed","placeholder","colorScheme","onClick","current","value","to","CartDetails","DividerHelper"],"mappings":"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","file":"static/js/8.f442cb47.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Box, Icon, Stack, Text } from \"@chakra-ui/react\";\nimport { StarIcon } from \"@chakra-ui/icons\";\n\nconst Rating = React.forwardRef(\n  ({ size, scale, fillColor, strokeColor, ratingProp }, ref) => {\n    // const [rating, setRating] = useState(0);\n    const buttons = [];\n\n    // const onClick = (idx) => {\n    //   if (!isNaN(idx)) {\n    //     // allow user to click first icon and set rating to zero if rating is already 1\n    //     if (rating === 1 && idx === 1) {\n    //       setRating(0);\n    //     } else {\n    //       setRating(idx);\n    //     }\n    //   }\n    // };\n\n    const RatingButton = ({ idx, fill }) => {\n      return (\n        <Box\n          as=\"button\"\n          aria-label={`Rate ${idx}`}\n          height={`${size}px`}\n          width={`${size}px`}\n          // onClick={() => onClick(idx)}\n          _focus={{ outline: 0 }}\n        >\n          <StarIcon\n            boxSize={`${size}px`}\n            color={fillColor}\n            stroke={strokeColor}\n            fillOpacity={fill ? \"100%\" : \"0\"}\n          />\n        </Box>\n      );\n    };\n\n    for (let i = 1; i <= scale; i++) {\n      buttons.push(<RatingButton key={i} idx={i} fill={i <= ratingProp} />);\n    }\n\n    return (\n      <Stack isInline>\n        {/* <input name=\"rating\" type=\"hidden\" value={ratingProp} ref={ref} /> */}\n        {buttons}\n      </Stack>\n    );\n  }\n);\n\nexport default Rating;\n","import React from \"react\";\n\nconst useFetch = (link) => {\n  const [Products, setProducts] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [isError, setIsError] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!link) return;\n\n    setIsLoading(true);\n\n    fetch(link)\n      .then((res) => res.json())\n      .then((json) => {\n        setProducts(json);\n      })\n      .catch((err) => {\n        setIsError(true);\n        // throw err;\n      })\n      .finally(() => setIsLoading(false));\n  }, [link])\n\n  return [Products, isLoading, isError];\n};\n\nexport default useFetch;\n","import { Text, VStack, Image, useColorModeValue } from \"@chakra-ui/react\";\r\nimport { darkModeContainerColor, lightModeContainerColor } from \"../../utils/Helper\";\r\nimport Rating from \"../../utils/Rating\";\r\n\r\nconst ProductSummary = ({ image, title, rating, price, isHover }) => {\r\n  return (\r\n    <VStack\r\n      spacing={3}\r\n      _hover={\r\n        isHover\r\n          ? {\r\n              transform: \"scale(1.04)\",\r\n              cursor: \"pointer\",\r\n            }\r\n          : null\r\n      }\r\n      transitionDuration=\"0.3s\"\r\n      align={{ base: \"center\", lg: \"flex-start\" }}\r\n      background={useColorModeValue(\r\n        lightModeContainerColor,\r\n        darkModeContainerColor\r\n      )}\r\n      px=\"5\"\r\n      py=\"10\"\r\n      h=\"95%\"\r\n    >\r\n      <Image src={image} boxSize=\"200px\" fit=\"contain\" mx=\"auto\" />\r\n      <Text fontFamily='\"Roboto\",serif' fontSize=\"md\" maxW=\"xs\">\r\n        {title}\r\n      </Text>\r\n      <Rating\r\n        size={16}\r\n        scale={5}\r\n        fillColor=\"gold\"\r\n        strokeColor=\"gold\"\r\n        ratingProp={rating.rate}\r\n      />\r\n      <VStack spacing={2} justifyContent=\"start\">\r\n        <Text fontSize=\"xl\" fontWeight=\"bold\" color=\"red\">\r\n          {price}\r\n        </Text>\r\n        {/* <Text color=\"gray.400\" fontSize=\"small\" lineHeight=\"35px\">\r\n            <strike>{item.price}</strike>\r\n          </Text> */}\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\n// ProductSummary.defaultProps = {\r\n//   isHover: false\r\n// }\r\n\r\nexport default ProductSummary;\r\n","// Import Swiper React components\nimport { Swiper } from \"swiper/react\";\n// import Swiper core and required modules\nimport SwiperCore, { Navigation, Pagination } from \"swiper\";\nimport { useMediaQuery } from \"@chakra-ui/react\"\n\n//https://stackoverflow.com/questions/69202975/module-not-found-cant-resolve-swiper-react\n//https://swiperjs.com/migration-guide\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\nimport \"swiper/components/navigation/navigation.min.css\";\n\n// install Swiper modules\nSwiperCore.use([Navigation, Pagination]);\n\n// https://swiperjs.com/demos\n// https://codepen.io/ncer/pen/xpqemZ\n// https://codesandbox.io/s/k2kup?file=/src/styles.css\n// const pagination = {\n//   clickable: true,\n//   renderBullet: function (idx, className) {\n//     return '<span class=\"' + className + '\">' + menu[idx] + \"</span>\";\n//   },\n// };\n\nconst Carousel = ({ drag, numOfSlides, width, height, padding, children }) => {\n  const [largerThanLg] = useMediaQuery(\"(min-width: 62em)\")\n\n  return (\n    <>\n      <Swiper\n        // pagination={pagination}\n        navigation={largerThanLg}\n        pagination={!largerThanLg}\n        spaceBetween={50}\n        slidesPerView={numOfSlides} // or 'auto'\n        grabCursor={drag}\n        // onSlideChange={() => console.log('slide change')}\n        simulateTouch={drag}\n        style={{\n          width: width,\n          height: height,\n          padding: padding,\n        }}\n      >\n        {children}\n      </Swiper>\n    </>\n  );\n};\n\nCarousel.defaultProps = {\n  drag: false,\n  numOfSlides: 1,\n  width: \"100%\",\n  height: \"auto\",\n  padding: 0,\n  // navigation: false,\n};\n\nexport default Carousel;\n","import React from \"react\";\nimport Carousel from \"../../utils/Carousel\";\nimport useFetch from \"../../utils/useFetch\";\nimport ProductSummary from \"./Summary\";\nimport { SwiperSlide } from \"swiper/react\";\nimport {\n  Box,\n  Stack,\n  Text,\n  Skeleton,\n  SkeletonText,\n} from \"@chakra-ui/react\";\nimport { useBreakpointValue } from \"@chakra-ui/react\";\n\nconst ProductRelated = () => {\n  const [AllProducts, AllProductLoading, AllProductErr] = useFetch(\n    `${process.env.REACT_APP_GET_PRODUCTS}`\n  );\n  const largerThanLg = useBreakpointValue({ base: false, lg: true });\n  return (\n    <Stack width=\"100%\" align=\"flex-start\">\n      {!AllProductLoading && (\n        <Text\n          px=\"10\"\n          py=\"5\"\n          fontSize=\"3xl\"\n          fontWeight=\"bold\"\n          fontFamily=\"sans-serif\"\n        >\n          Related Products\n        </Text>\n      )}\n      \n      <Stack\n        width=\"100%\"\n        // style for mobile version\n        direction={{ base: \"column\", xl: \"row\" }}\n        spacing=\"20\"\n        justify=\"space-evenly\"\n      >\n        {AllProductLoading &&\n          [1, 2, 3, 4].map((idx) => (\n            <Box p=\"10\" key={`skeleton-${idx}`}>\n              <Skeleton height=\"48\" width=\"48\" />\n              <Skeleton height=\"4\" width=\"40\" mt=\"4\" />\n              <Skeleton height=\"4\" width=\"16\" mt=\"4\" />\n              <SkeletonText mt=\"4\" noOfLines={3} spacing={4} width=\"20\" />\n            </Box>\n          ))}\n        {!AllProductLoading && largerThanLg && (\n          <Carousel numOfSlides={4} padding=\"0 30px\">\n            {AllProducts.map((item, idx) => (\n              <SwiperSlide key={`related-product-${idx}`}>\n                <ProductSummary {...item} />\n              </SwiperSlide>\n            ))}\n          </Carousel>\n        )}\n        {!largerThanLg &&\n          AllProducts.map((item, idx) => (\n            <ProductSummary {...item} key={`related-product-${idx}`} />\n          ))}\n      </Stack>\n    </Stack>\n  );\n};\n\nexport default ProductRelated;\n","import {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Image,\n  Stack,\n  Divider,\n  Text,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  Box,\n  Input,\n  InputRightElement,\n  InputGroup,\n  Button,\n  useColorModeValue,\n  LightMode,\n} from \"@chakra-ui/react\";\nimport useFetch from \"../../../utils/useFetch\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport {\n  darkModeContainerColor,\n  lightModeContainerColor,\n} from \"../../../utils/Helper\";\n\nfunction isObjectEmpty(obj) {\n  return (\n    obj &&\n    Object.keys(obj).length === 0 &&\n    Object.getPrototypeOf(obj) === Object.prototype\n  );\n}\n\nconst DataTable = () => {\n  const [Cart, CartIsLoading, CartIsErr] = useFetch(\n    \"https://fakestoreapi.com/carts/5\"\n  );\n  const [AllProducts, AllProductsIsLoading, AllProductsIsErr] = useFetch(\n    process.env.REACT_APP_GET_PRODUCTS\n  );\n  const [CartProducts, setCartProducts] = React.useState([]);\n  const [Subtotal, setSubtotal] = React.useState(0);\n  const [Total, setTotal] = React.useState(0);\n  const [Sales, setSales] = React.useState(0);\n  const [Coupon, setCoupon] = React.useState({\n    id: \"123\",\n    name: \"25% off\",\n    percent_off: 25,\n    valid: true, // --> get xong roi kiem tra roi moi cho render hay trong luc render kiem tra\n  });\n\n  React.useEffect(() => {\n    if (!isObjectEmpty(Cart) && AllProducts.length > 0) {\n      if (Cart.hasOwnProperty(\"products\")) {\n        if (Cart.products.length > 0) {\n          const result = AllProducts.filter((item) =>\n            Cart.products.some((el) => item.id === el.productId)\n          );\n          result.forEach((item, idx) => {\n            item.quantity = Cart.products[idx].quantity;\n            item.total = item.quantity * item.price;\n          });\n          setCartProducts(result);\n        }\n      }\n    }\n  }, [Cart, AllProducts]);\n\n  const handleStepper = (val, idx) => {\n    setCartProducts((prevState) => {\n      prevState[idx].quantity = parseInt(val);\n      prevState[idx].total = prevState[idx].quantity * prevState[idx].price;\n      return [...prevState];\n    });\n  };\n\n  React.useEffect(() => {\n    if (CartProducts.length > 0) {\n      const sum = CartProducts.reduce(\n        (prevItem, nextItem) => prevItem.total + nextItem.total\n      );\n      setSubtotal(sum);\n      setTotal(sum);\n    }\n  }, [CartProducts]);\n\n  const couponInput = React.useRef(\"\");\n  const handleApplyCoupon = () => {\n    if (couponInput.current.value === Coupon.id) {\n      setSales((Total * Coupon.percent_off) / 100);\n      setCoupon((prevState) => {\n        return { ...prevState, valid: false };\n      });\n    }\n  };\n\n  // Chua sale off tren toan bo gia tri san pham\n  React.useEffect(() => {\n    setTotal((prevState) => prevState - Sales);\n  }, [Sales]);\n\n  return (\n    <Stack direction=\"row\" spacing=\"5\">\n      <Table\n        flexBasis=\"70%\"\n        background={useColorModeValue(\n          lightModeContainerColor,\n          darkModeContainerColor\n        )}\n      >\n        <Thead>\n          <Tr>\n            <Th>Name</Th>\n            <Th>Price</Th>\n            <Th>Quantity</Th>\n            <Th isNumeric>Total</Th>\n          </Tr>\n        </Thead>\n\n        <Tbody>\n          {CartProducts.length > 0 &&\n            CartProducts.map((item, idx) => (\n              <Tr key={`product-${idx}`}>\n                <Td>\n                  <Stack direction=\"row\" align=\"center\" spacing=\"5\">\n                    <Image src={item.image} boxSize=\"108px\" />\n                    <Text>{item.title}</Text>\n                  </Stack>\n                </Td>\n                <Td>{item.price}</Td>\n                <Td isNumeric>\n                  <NumberInput\n                    step={1}\n                    defaultValue={item.quantity}\n                    min={0}\n                    maxW=\"20\"\n                    onChange={(val) => handleStepper(val, idx)}\n                  >\n                    <NumberInputField />\n                    <NumberInputStepper>\n                      <NumberIncrementStepper />\n                      <NumberDecrementStepper />\n                    </NumberInputStepper>\n                  </NumberInput>\n                </Td>\n                <Td isNumeric>{item.total}</Td>\n              </Tr>\n            ))}\n        </Tbody>\n      </Table>\n\n      <Box\n        flexBasis=\"30%\"\n        background={useColorModeValue(\n          lightModeContainerColor,\n          darkModeContainerColor\n        )}\n        p=\"5\"\n      >\n        <Stack spacing=\"3\">\n          <Text fontWeight=\"semibold\" size=\"lg\">\n            Payment Information\n          </Text>\n          <Divider />\n          {!CartIsLoading && (\n            <Table variant=\"unstyled\" size=\"md\">\n              <Tbody>\n                <Tr>\n                  <Td>Subtotal</Td>\n                  <Td isNumeric fontWeight=\"semibold\">\n                    {Subtotal}$\n                  </Td>\n                </Tr>\n              </Tbody>\n              <Tbody>\n                <Tr>\n                  <Td>Shipping Fee</Td>\n                  <Td isNumeric fontWeight=\"semibold\">\n                    10.00$\n                  </Td>\n                </Tr>\n              </Tbody>\n              <Tbody>\n                <Tr>\n                  <Td>Sales</Td>\n                  <Td isNumeric fontWeight=\"semibold\">\n                    {Sales.toFixed(2)}$\n                  </Td>\n                </Tr>\n              </Tbody>\n              <Tbody>\n                <Tr>\n                  <Td>Total</Td>\n                  <Td\n                    isNumeric\n                    fontWeight=\"semibold\"\n                    color=\"orange\"\n                    fontSize=\"xl\"\n                  >\n                    {(Total + 10).toFixed(2)}$\n                  </Td>\n                </Tr>\n              </Tbody>\n            </Table>\n          )}\n\n          <LightMode>\n            <InputGroup>\n              <Input placeholder=\"Coupon (accept only one)\" ref={couponInput} />\n              <InputRightElement width=\"16\">\n                <Button colorScheme=\"teal\" onClick={handleApplyCoupon}>\n                  Apply\n                </Button>\n              </InputRightElement>\n            </InputGroup>\n\n            <Text>Coupon: 123</Text>\n\n            <RouterLink to=\"/checkout\">\n              <Button colorScheme=\"orange\">Checkout</Button>\n            </RouterLink>\n          </LightMode>\n        </Stack>\n      </Box>\n    </Stack>\n  );\n};\n\nexport default DataTable;\n","import DataTable from \"./DataTable\";\nimport { Stack, Box, useColorModeValue } from \"@chakra-ui/react\";\nimport ProductRelated from \"../../Product/Related\";\nimport {\n  darkModeContainerColor,\n  lightModeContainerColor,\n} from \"../../../utils/Helper\";\nimport DividerHelper from \"../../../utils/DividerHelper\";\n\nconst CartDetails = () => {\n  return (\n    <Stack px=\"10\" py=\"5\" spacing=\"10\" >\n      <Box\n        width=\"100%\"\n        background={useColorModeValue(\n          lightModeContainerColor,\n          darkModeContainerColor\n        )}\n      >\n        <DataTable />\n      </Box>\n\n      <DividerHelper />\n\n      <Box\n        width=\"100%\"\n        background={useColorModeValue(\n          lightModeContainerColor,\n          darkModeContainerColor\n        )}\n      >\n        <ProductRelated />\n      </Box>\n    </Stack>\n  );\n};\n\nexport default CartDetails;\n"],"sourceRoot":""}