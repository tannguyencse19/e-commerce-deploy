{"version":3,"sources":["utils/Rating.jsx","utils/useFetch.js","views/Product/Summary.jsx","utils/Carousel.jsx","views/Product/Related.jsx","views/Product/Details.jsx"],"names":["Rating","React","forwardRef","ref","size","scale","fillColor","strokeColor","ratingProp","buttons","RatingButton","idx","fill","as","aria-label","height","width","_focus","outline","boxSize","color","stroke","fillOpacity","i","push","isInline","useFetch","link","useState","Products","setProducts","isLoading","setIsLoading","isError","setIsError","useEffect","fetch","then","res","json","catch","err","finally","ProductSummary","image","title","rating","price","isHover","spacing","_hover","transform","cursor","transitionDuration","align","base","lg","background","useColorModeValue","lightModeContainerColor","darkModeContainerColor","px","py","h","src","fit","mx","fontFamily","fontSize","maxW","rate","justifyContent","fontWeight","SwiperCore","use","Navigation","Pagination","Carousel","drag","numOfSlides","padding","children","useMediaQuery","largerThanLg","navigation","pagination","spaceBetween","slidesPerView","grabCursor","simulateTouch","style","defaultProps","ProductRelated","process","AllProducts","AllProductLoading","useBreakpointValue","direction","xl","justify","map","p","mt","noOfLines","item","key","ProductDetails","id","match","params","ProductsLoading","category","RelatedProducts","RelatedProductsLoading","useNumberInput","step","defaultValue","min","getInputProps","getIncrementButtonProps","getDecrementButtonProps","inc","dec","input","largerThanMd","md","display","marginLeft","marginRight","objectFit","overflowWrap","description","colorScheme","w","isFullWidth"],"mappings":"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","file":"static/js/9.33d23a7e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Box, Icon, Stack, Text } from \"@chakra-ui/react\";\nimport { StarIcon } from \"@chakra-ui/icons\";\n\nconst Rating = React.forwardRef(\n  ({ size, scale, fillColor, strokeColor, ratingProp }, ref) => {\n    // const [rating, setRating] = useState(0);\n    const buttons = [];\n\n    // const onClick = (idx) => {\n    //   if (!isNaN(idx)) {\n    //     // allow user to click first icon and set rating to zero if rating is already 1\n    //     if (rating === 1 && idx === 1) {\n    //       setRating(0);\n    //     } else {\n    //       setRating(idx);\n    //     }\n    //   }\n    // };\n\n    const RatingButton = ({ idx, fill }) => {\n      return (\n        <Box\n          as=\"button\"\n          aria-label={`Rate ${idx}`}\n          height={`${size}px`}\n          width={`${size}px`}\n          // onClick={() => onClick(idx)}\n          _focus={{ outline: 0 }}\n        >\n          <StarIcon\n            boxSize={`${size}px`}\n            color={fillColor}\n            stroke={strokeColor}\n            fillOpacity={fill ? \"100%\" : \"0\"}\n          />\n        </Box>\n      );\n    };\n\n    for (let i = 1; i <= scale; i++) {\n      buttons.push(<RatingButton key={i} idx={i} fill={i <= ratingProp} />);\n    }\n\n    return (\n      <Stack isInline>\n        {/* <input name=\"rating\" type=\"hidden\" value={ratingProp} ref={ref} /> */}\n        {buttons}\n      </Stack>\n    );\n  }\n);\n\nexport default Rating;\n","import React from \"react\";\n\nconst useFetch = (link) => {\n  const [Products, setProducts] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [isError, setIsError] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!link) return;\n\n    setIsLoading(true);\n\n    fetch(link)\n      .then((res) => res.json())\n      .then((json) => {\n        setProducts(json);\n      })\n      .catch((err) => {\n        setIsError(true);\n        // throw err;\n      })\n      .finally(() => setIsLoading(false));\n  }, [link])\n\n  return [Products, isLoading, isError];\n};\n\nexport default useFetch;\n","import { Text, VStack, Image, useColorModeValue } from \"@chakra-ui/react\";\r\nimport { darkModeContainerColor, lightModeContainerColor } from \"../../utils/Helper\";\r\nimport Rating from \"../../utils/Rating\";\r\n\r\nconst ProductSummary = ({ image, title, rating, price, isHover }) => {\r\n  return (\r\n    <VStack\r\n      spacing={3}\r\n      _hover={\r\n        isHover\r\n          ? {\r\n              transform: \"scale(1.04)\",\r\n              cursor: \"pointer\",\r\n            }\r\n          : null\r\n      }\r\n      transitionDuration=\"0.3s\"\r\n      align={{ base: \"center\", lg: \"flex-start\" }}\r\n      background={useColorModeValue(\r\n        lightModeContainerColor,\r\n        darkModeContainerColor\r\n      )}\r\n      px=\"5\"\r\n      py=\"10\"\r\n      h=\"95%\"\r\n    >\r\n      <Image src={image} boxSize=\"200px\" fit=\"contain\" mx=\"auto\" />\r\n      <Text fontFamily='\"Roboto\",serif' fontSize=\"md\" maxW=\"xs\">\r\n        {title}\r\n      </Text>\r\n      <Rating\r\n        size={16}\r\n        scale={5}\r\n        fillColor=\"gold\"\r\n        strokeColor=\"gold\"\r\n        ratingProp={rating.rate}\r\n      />\r\n      <VStack spacing={2} justifyContent=\"start\">\r\n        <Text fontSize=\"xl\" fontWeight=\"bold\" color=\"red\">\r\n          {price}\r\n        </Text>\r\n        {/* <Text color=\"gray.400\" fontSize=\"small\" lineHeight=\"35px\">\r\n            <strike>{item.price}</strike>\r\n          </Text> */}\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\n// ProductSummary.defaultProps = {\r\n//   isHover: false\r\n// }\r\n\r\nexport default ProductSummary;\r\n","// Import Swiper React components\nimport { Swiper } from \"swiper/react\";\n// import Swiper core and required modules\nimport SwiperCore, { Navigation, Pagination } from \"swiper\";\nimport { useMediaQuery } from \"@chakra-ui/react\"\n\n//https://stackoverflow.com/questions/69202975/module-not-found-cant-resolve-swiper-react\n//https://swiperjs.com/migration-guide\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\nimport \"swiper/components/navigation/navigation.min.css\";\n\n// install Swiper modules\nSwiperCore.use([Navigation, Pagination]);\n\n// https://swiperjs.com/demos\n// https://codepen.io/ncer/pen/xpqemZ\n// https://codesandbox.io/s/k2kup?file=/src/styles.css\n// const pagination = {\n//   clickable: true,\n//   renderBullet: function (idx, className) {\n//     return '<span class=\"' + className + '\">' + menu[idx] + \"</span>\";\n//   },\n// };\n\nconst Carousel = ({ drag, numOfSlides, width, height, padding, children }) => {\n  const [largerThanLg] = useMediaQuery(\"(min-width: 62em)\")\n\n  return (\n    <>\n      <Swiper\n        // pagination={pagination}\n        navigation={largerThanLg}\n        pagination={!largerThanLg}\n        spaceBetween={50}\n        slidesPerView={numOfSlides} // or 'auto'\n        grabCursor={drag}\n        // onSlideChange={() => console.log('slide change')}\n        simulateTouch={drag}\n        style={{\n          width: width,\n          height: height,\n          padding: padding,\n        }}\n      >\n        {children}\n      </Swiper>\n    </>\n  );\n};\n\nCarousel.defaultProps = {\n  drag: false,\n  numOfSlides: 1,\n  width: \"100%\",\n  height: \"auto\",\n  padding: 0,\n  // navigation: false,\n};\n\nexport default Carousel;\n","import React from \"react\";\nimport Carousel from \"../../utils/Carousel\";\nimport useFetch from \"../../utils/useFetch\";\nimport ProductSummary from \"./Summary\";\nimport { SwiperSlide } from \"swiper/react\";\nimport {\n  Box,\n  Stack,\n  Text,\n  Skeleton,\n  SkeletonText,\n} from \"@chakra-ui/react\";\nimport { useBreakpointValue } from \"@chakra-ui/react\";\n\nconst ProductRelated = () => {\n  const [AllProducts, AllProductLoading, AllProductErr] = useFetch(\n    `${process.env.REACT_APP_GET_PRODUCTS}`\n  );\n  const largerThanLg = useBreakpointValue({ base: false, lg: true });\n  return (\n    <Stack width=\"100%\" align=\"flex-start\">\n      {!AllProductLoading && (\n        <Text\n          px=\"10\"\n          py=\"5\"\n          fontSize=\"3xl\"\n          fontWeight=\"bold\"\n          fontFamily=\"sans-serif\"\n        >\n          Related Products\n        </Text>\n      )}\n      \n      <Stack\n        width=\"100%\"\n        // style for mobile version\n        direction={{ base: \"column\", xl: \"row\" }}\n        spacing=\"20\"\n        justify=\"space-evenly\"\n      >\n        {AllProductLoading &&\n          [1, 2, 3, 4].map((idx) => (\n            <Box p=\"10\" key={`skeleton-${idx}`}>\n              <Skeleton height=\"48\" width=\"48\" />\n              <Skeleton height=\"4\" width=\"40\" mt=\"4\" />\n              <Skeleton height=\"4\" width=\"16\" mt=\"4\" />\n              <SkeletonText mt=\"4\" noOfLines={3} spacing={4} width=\"20\" />\n            </Box>\n          ))}\n        {!AllProductLoading && largerThanLg && (\n          <Carousel numOfSlides={4} padding=\"0 30px\">\n            {AllProducts.map((item, idx) => (\n              <SwiperSlide key={`related-product-${idx}`}>\n                <ProductSummary {...item} />\n              </SwiperSlide>\n            ))}\n          </Carousel>\n        )}\n        {!largerThanLg &&\n          AllProducts.map((item, idx) => (\n            <ProductSummary {...item} key={`related-product-${idx}`} />\n          ))}\n      </Stack>\n    </Stack>\n  );\n};\n\nexport default ProductRelated;\n","import React from \"react\";\r\nimport Carousel from \"../../utils/Carousel\";\r\nimport useFetch from \"../../utils/useFetch\";\r\nimport Rating from \"../../utils/Rating\";\r\nimport { SwiperSlide } from \"swiper/react\";\r\nimport {\r\n  Box,\r\n  HStack,\r\n  VStack,\r\n  Stack,\r\n  Text,\r\n  useNumberInput,\r\n  Button,\r\n  ButtonGroup,\r\n  Input,\r\n  Image,\r\n  Skeleton,\r\n  SkeletonText,\r\n  useColorModeValue,\r\n  LightMode,\r\n} from \"@chakra-ui/react\";\r\nimport { useBreakpointValue } from \"@chakra-ui/react\";\r\nimport ProductRelated from \"./Related\";\r\nimport DividerHelper from \"../../utils/DividerHelper\";\r\nimport {\r\n  darkModeBackgroundColor,\r\n  darkModeContainerColor,\r\n  lightModeContainerColor,\r\n} from \"../../utils/Helper\";\r\n\r\nconst ProductDetails = ({\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) => {\r\n  const [Products, ProductsLoading, ProductsErr] = useFetch(\r\n    `${process.env.REACT_APP_GET_PRODUCTS}/${id}`\r\n  );\r\n  const [RelatedProducts, RelatedProductsLoading, RelatedProductsErr] =\r\n    useFetch(\r\n      `${process.env.REACT_APP_GET_PRODUCT_IN_CATEGORY}/${Products.category}`\r\n    );\r\n\r\n  const { getInputProps, getIncrementButtonProps, getDecrementButtonProps } =\r\n    useNumberInput({\r\n      step: 1,\r\n      defaultValue: 1,\r\n      min: 1,\r\n      // max: 6,\r\n    });\r\n  const inc = getIncrementButtonProps();\r\n  const dec = getDecrementButtonProps();\r\n  const input = getInputProps();\r\n\r\n  const largerThanMd = useBreakpointValue({ base: false, md: true });\r\n\r\n  return (\r\n    <VStack py=\"10\">\r\n      <Stack\r\n        direction={{ base: \"column\", xl: \"row\" }}\r\n        justify=\"space-around\"\r\n        width=\"100%\"\r\n        p=\"10\"\r\n      >\r\n        <Box\r\n          background={useColorModeValue(\r\n            lightModeContainerColor,\r\n            darkModeContainerColor\r\n          )}\r\n        >\r\n          {RelatedProductsLoading && (\r\n            <Skeleton width={{ base: \"auto\", md: \"400px\" }} height=\"300px\" />\r\n          )}\r\n          {!RelatedProductsLoading && (\r\n            <Carousel\r\n              drag\r\n              numOfSlides={1}\r\n              width={largerThanMd ? \"400px\" : \"auto\"}\r\n            >\r\n              {RelatedProducts.map(({ image }, idx) => (\r\n                <SwiperSlide key={`image-${idx}`}>\r\n                  <Image\r\n                    src={image}\r\n                    display=\"block\"\r\n                    marginLeft=\"auto\"\r\n                    marginRight=\"auto\"\r\n                    width=\"400px\"\r\n                    height=\"300px\"\r\n                    objectFit=\"contain\"\r\n                  />\r\n                </SwiperSlide>\r\n              ))}\r\n            </Carousel>\r\n          )}\r\n        </Box>\r\n        <VStack\r\n          align=\"flex-start\"\r\n          spacing=\"7\"\r\n          background={useColorModeValue(\r\n            lightModeContainerColor,\r\n            darkModeContainerColor\r\n          )}\r\n          p=\"10\"\r\n        >\r\n          {ProductsLoading && (\r\n            <Box width={{ base: \"100%\", md: \"600px\" }}>\r\n              <Skeleton height=\"16\" />\r\n              <Skeleton height=\"8\" width=\"40\" mt=\"4\" />\r\n              <Skeleton height=\"8\" width=\"16\" mt=\"4\" />\r\n              <SkeletonText mt=\"10\" noOfLines={6} spacing={4} />\r\n              <Skeleton height=\"8\" width=\"48\" mt=\"4\" />\r\n              <Skeleton height=\"8\" width={{ base: \"auto\", md: \"sm\" }} mt=\"4\" />\r\n            </Box>\r\n          )}\r\n          {!ProductsLoading && (\r\n            <>\r\n              <Text\r\n                fontSize=\"4xl\"\r\n                fontWeight=\"bold\"\r\n                fontFamily='\"Playfair Display\",serif'\r\n                width={{ xl: \"xl\" }}\r\n                overflowWrap=\"break-word\"\r\n              >\r\n                {Products.title}\r\n              </Text>\r\n              <Rating\r\n                size={20}\r\n                scale={5}\r\n                fillColor=\"gold\"\r\n                strokeColor=\"gold\"\r\n                ratingProp={Products.rating.rate}\r\n              />\r\n              <Text fontSize=\"2xl\" fontFamily='\"Playfair Display\",serif'>\r\n                {Products.price}$\r\n              </Text>\r\n              <Text width={{ xl: \"xl\" }} overflowWrap=\"break-word\">\r\n                {Products.description}\r\n              </Text>\r\n              <HStack>\r\n                <Button {...dec} colorScheme=\"gray\">\r\n                  -\r\n                </Button>\r\n                <Input {...input} w=\"16\" />\r\n                <Button {...inc} colorScheme=\"gray\">\r\n                  +\r\n                </Button>\r\n              </HStack>\r\n              <LightMode>\r\n                <ButtonGroup width={{ md: \"md\" }}>\r\n                  <Button isFullWidth colorScheme=\"orange\">\r\n                    Buy Now\r\n                  </Button>\r\n                  <Button isFullWidth colorScheme=\"messenger\">\r\n                    Add To Cart\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </LightMode>\r\n            </>\r\n          )}\r\n        </VStack>\r\n      </Stack>\r\n\r\n      <DividerHelper />\r\n\r\n      <Box width=\"100%\" mt=\"0\">\r\n        <ProductRelated />\r\n      </Box>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n"],"sourceRoot":""}