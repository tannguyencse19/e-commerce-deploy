{"version":3,"sources":["../../../src/Star.tsx","../node_modules/@chakra-ui/counter/node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js","../node_modules/@chakra-ui/counter/dist/chakra-ui-counter.esm.js","../node_modules/@chakra-ui/number-input/node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js","../node_modules/@chakra-ui/number-input/node_modules/@chakra-ui/icon/dist/chakra-ui-icon.esm.js","../node_modules/@chakra-ui/number-input/dist/chakra-ui-number-input.esm.js"],"names":["StarIcon","createIcon","d","displayName","fn","cache","WeakMap","memoize","obj","path","fallback","index","key","split","length","undefined","window","document","createElement","join","once","result","_len5","arguments","args","Array","_key5","apply","this","warn","options","condition","message","minSafeInteger","Number","MIN_SAFE_INTEGER","maxSafeInteger","MAX_SAFE_INTEGER","toNumber","value","num","parseFloat","isNaN","isFinite","isNotNumber","toPrecision","precision","nextValue","scaleFactor","Math","pow","round","toFixed","toString","countDecimalPlaces","e","p","Object","freeze","useCounter","props","_props","onChange","precisionProp","defaultValue","valueProp","_props$step","step","stepProp","_props$min","min","_props$max","max","_props$keepWithinRang","keepWithinRange","onChangeProp","useCallbackRef","_useState","useState","_cast","cast","valueState","setValue","_useControllableProp","useControllableProp","isControlled","decimalPlaces","getDecimalPlaces","parse","update","useCallback","next","clamp","clampValue","increment","decrement","reset","_cast2","castValue","_cast3","valueAsNumber","isOutOfRange","isAtMax","isAtMin","replace","parsedValue","__DEV__","process","isElement","el","nodeType","Node","ELEMENT_NODE","isHTMLElement","_el$ownerDocument$def","ownerDocument","defaultView","HTMLElement","getOwnerDocument","node","_node$ownerDocument","isBrowser","ariaAttr","cx","_len","classNames","_key","filter","Boolean","isActiveElement","element","activeElement","_arrayLikeToArray","arr","len","i","arr2","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","call","bind","isArray","minLen","n","prototype","slice","constructor","name","from","test","_unsupportedIterableToArray","done","TypeError","callAllHandlers","_len2","fns","_key2","event","some","defaultPrevented","focus","_options","_options$isActive","isActive","nextTick","_options$preventScrol","preventScroll","_options$selectTextIf","selectTextIfInput","triggerFocus","supportsPreventScrollCached","supportsPreventScroll","scrollableElements","_step","_iterator","_step$value","scrollTop","scrollLeft","restoreScrollPosition","_doc$defaultView","doc","win","parent","parentNode","rootScrollingElement","scrollingElement","documentElement","offsetHeight","scrollHeight","offsetWidth","scrollWidth","push","getScrollableElements","tagName","toLowerCase","isInputElement","select","requestAnimationFrame","_extends","assign","target","source","hasOwnProperty","_excluded","fallbackIcon","React","stroke","strokeWidth","strokeLinecap","fill","strokeMiterlimit","cy","r","viewBox","Icon","forwardRef","ref","as","_props$color","color","_props$focusable","focusable","children","className","__css","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","shared","w","h","display","lineHeight","flexShrink","_viewBox","chakra","svg","_path","verticalAlign","TriangleDownIcon","TriangleUpIcon","FLOATING_POINT_REGEX","isFloatingPointNumericCharacter","character","_excluded$1","sanitize","useNumberInput","_props$focusInputOnCh","focusInputOnChange","_props$clampValueOnBl","clampValueOnBlur","isReadOnly","isDisabled","isRequired","getAriaValueText","isInvalid","_props$pattern","pattern","_props$inputMode","inputMode","allowMouseWheel","id","ariaDescBy","ariaLabel","ariaLabelledBy","onFocus","onBlur","htmlProps","onFocusProp","onBlurProp","getAriaValueTextProp","counter","updateFn","incrementFn","decrementFn","_useBoolean","useBoolean","isFocused","setFocused","inputRef","useSafeLayoutEffect","current","isInteractive","spinner","isSpinning","setIsSpinning","_useState2","action","setAction","_useState3","runOnce","setRunOnce","timeoutRef","useRef","removeTimeout","clearTimeout","useInterval","up","setTimeout","down","stop","useUnmountEffect","useSpinner","onKeyDown","ctrlKey","altKey","metaKey","isValidNumericKeyboardEvent","preventDefault","stepFactor","getStepFactor","ArrowUp","ArrowDown","Home","End","keyCode","normalizeEventKey","ratio","shiftKey","ariaValueText","text","defaultText","validateAndClamp","onInputBlur","off","focusInput","spinUp","spinDown","pointerDown","ontouchstart","useEventListener","isInputFocused","direction","sign","deltaY","passive","getIncrementButtonProps","_extends2","disabled","role","tabIndex","onMouseUp","onMouseLeave","onTouchEnd","getDecrementButtonProps","_extends3","getInputProps","_props$readOnly","_props$readOnly2","_props$required","_props$required2","type","readOnly","required","mergeRefs","autoComplete","autoCorrect","on","_createContext","createContext","errorMessage","NumberInputProvider","useNumberInputContext","NumberInput","styles","useMultiStyleConfig","ownProps","omitThemingProps","_useNumberInput","useFormControlProps","context","ctx","StylesProvider","div","position","zIndex","root","NumberInputStepper","useStyles","flexDirection","top","insetEnd","margin","height","stepperGroup","NumberInputField","input","width","field","StyledStepper","baseStyle","justifyContent","alignItems","flex","transitionProperty","transitionDuration","userSelect","cursor","NumberDecrementStepper","_props$children","stepper","NumberIncrementStepper","_props$children2"],"mappings":"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","file":"static/js/1.3c0833b7.chunk.js","sourcesContent":["import { createIcon } from \"@chakra-ui/icon\"\n\nexport const StarIcon = createIcon({\n  d:\n    \"M23.555,8.729a1.505,1.505,0,0,0-1.406-.98H16.062a.5.5,0,0,1-.472-.334L13.405,1.222a1.5,1.5,0,0,0-2.81,0l-.005.016L8.41,7.415a.5.5,0,0,1-.471.334H1.85A1.5,1.5,0,0,0,.887,10.4l5.184,4.3a.5.5,0,0,1,.155.543L4.048,21.774a1.5,1.5,0,0,0,2.31,1.684l5.346-3.92a.5.5,0,0,1,.591,0l5.344,3.919a1.5,1.5,0,0,0,2.312-1.683l-2.178-6.535a.5.5,0,0,1,.155-.543l5.194-4.306A1.5,1.5,0,0,0,23.555,8.729Z\",\n  displayName: \"StarIcon\",\n})\n","export * from 'css-box-model';\nexport { default as mergeWith } from 'lodash.mergewith';\nimport sync, { cancelSync, getFrameData } from 'framesync';\n\nfunction getFirstItem(array) {\n  return array != null && array.length ? array[0] : undefined;\n}\nfunction getLastItem(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\nfunction getPrevItem(index, array, loop) {\n  if (loop === void 0) {\n    loop = true;\n  }\n\n  var prevIndex = getPrevIndex(index, array.length, loop);\n  return array[prevIndex];\n}\nfunction getNextItem(index, array, loop) {\n  if (loop === void 0) {\n    loop = true;\n  }\n\n  var nextIndex = getNextIndex(index, array.length, 1, loop);\n  return array[nextIndex];\n}\nfunction removeIndex(array, index) {\n  return array.filter(function (_, idx) {\n    return idx !== index;\n  });\n}\nfunction addItem(array, item) {\n  return [].concat(array, [item]);\n}\nfunction removeItem(array, item) {\n  return array.filter(function (eachItem) {\n    return eachItem !== item;\n  });\n}\n/**\n * Get the next index based on the current index and step.\n *\n * @param currentIndex the current index\n * @param length the total length or count of items\n * @param step the number of steps\n * @param loop whether to circle back once `currentIndex` is at the start/end\n */\n\nfunction getNextIndex(currentIndex, length, step, loop) {\n  if (step === void 0) {\n    step = 1;\n  }\n\n  if (loop === void 0) {\n    loop = true;\n  }\n\n  var lastIndex = length - 1;\n\n  if (currentIndex === -1) {\n    return step > 0 ? 0 : lastIndex;\n  }\n\n  var nextIndex = currentIndex + step;\n\n  if (nextIndex < 0) {\n    return loop ? lastIndex : 0;\n  }\n\n  if (nextIndex >= length) {\n    if (loop) return 0;\n    return currentIndex > length ? length : currentIndex;\n  }\n\n  return nextIndex;\n}\n/**\n * Get's the previous index based on the current index.\n * Mostly used for keyboard navigation.\n *\n * @param index - the current index\n * @param count - the length or total count of items in the array\n * @param loop - whether we should circle back to the\n * first/last once `currentIndex` is at the start/end\n */\n\nfunction getPrevIndex(index, count, loop) {\n  if (loop === void 0) {\n    loop = true;\n  }\n\n  return getNextIndex(index, count, -1, loop);\n}\n/**\n * Converts an array into smaller chunks or groups.\n *\n * @param array the array to chunk into group\n * @param size the length of each chunk\n */\n\nfunction chunk(array, size) {\n  return array.reduce(function (rows, currentValue, index) {\n    if (index % size === 0) {\n      rows.push([currentValue]);\n    } else {\n      rows[rows.length - 1].push(currentValue);\n    }\n\n    return rows;\n  }, []);\n}\n/**\n * Gets the next item based on a search string\n *\n * @param items array of items\n * @param searchString the search string\n * @param itemToString resolves an item to string\n * @param currentItem the current selected item\n */\n\nfunction getNextItemFromSearch(items, searchString, itemToString, currentItem) {\n  if (searchString == null) {\n    return currentItem;\n  } // If current item doesn't exist, find the item that matches the search string\n\n\n  if (!currentItem) {\n    var foundItem = items.find(function (item) {\n      return itemToString(item).toLowerCase().startsWith(searchString.toLowerCase());\n    });\n    return foundItem;\n  } // Filter items for ones that match the search string (case insensitive)\n\n\n  var matchingItems = items.filter(function (item) {\n    return itemToString(item).toLowerCase().startsWith(searchString.toLowerCase());\n  }); // If there's a match, let's get the next item to select\n\n  if (matchingItems.length > 0) {\n    var nextIndex; // If the currentItem is in the available items, we move to the next available option\n\n    if (matchingItems.includes(currentItem)) {\n      var currentIndex = matchingItems.indexOf(currentItem);\n      nextIndex = currentIndex + 1;\n\n      if (nextIndex === matchingItems.length) {\n        nextIndex = 0;\n      }\n\n      return matchingItems[nextIndex];\n    } // Else, we pick the first item in the available items\n\n\n    nextIndex = items.indexOf(matchingItems[0]);\n    return items[nextIndex];\n  } // a decent fallback to the currentItem\n\n\n  return currentItem;\n}\n\n// Number assertions\nfunction isNumber(value) {\n  return typeof value === \"number\";\n}\nfunction isNotNumber(value) {\n  return typeof value !== \"number\" || Number.isNaN(value) || !Number.isFinite(value);\n}\nfunction isNumeric(value) {\n  return value != null && value - parseFloat(value) + 1 >= 0;\n} // Array assertions\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\nfunction isEmptyArray(value) {\n  return isArray(value) && value.length === 0;\n} // Function assertions\n\nfunction isFunction(value) {\n  return typeof value === \"function\";\n} // Generic assertions\n\nfunction isDefined(value) {\n  return typeof value !== \"undefined\" && value !== undefined;\n}\nfunction isUndefined(value) {\n  return typeof value === \"undefined\" || value === undefined;\n} // Object assertions\n\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !isArray(value);\n}\nfunction isEmptyObject(value) {\n  return isObject(value) && Object.keys(value).length === 0;\n}\nfunction isNotEmptyObject(value) {\n  return value && !isEmptyObject(value);\n}\nfunction isNull(value) {\n  return value == null;\n} // String assertions\n\nfunction isString(value) {\n  return Object.prototype.toString.call(value) === \"[object String]\";\n}\nfunction isCssVar(value) {\n  return /^var\\(--.+\\)$/.test(value);\n} // Empty assertions\n\nfunction isEmpty(value) {\n  if (isArray(value)) return isEmptyArray(value);\n  if (isObject(value)) return isEmptyObject(value);\n  if (value == null || value === \"\") return true;\n  return false;\n}\nvar __DEV__ = process.env.NODE_ENV !== \"production\";\nvar __TEST__ = process.env.NODE_ENV === \"test\";\nfunction isRefObject(val) {\n  return \"current\" in val;\n}\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\n\nfunction omit(object, keys) {\n  var result = {};\n  Object.keys(object).forEach(function (key) {\n    if (keys.includes(key)) return;\n    result[key] = object[key];\n  });\n  return result;\n}\nfunction pick(object, keys) {\n  var result = {};\n  keys.forEach(function (key) {\n    if (key in object) {\n      result[key] = object[key];\n    }\n  });\n  return result;\n}\nfunction split(object, keys) {\n  var picked = {};\n  var omitted = {};\n  Object.keys(object).forEach(function (key) {\n    if (keys.includes(key)) {\n      picked[key] = object[key];\n    } else {\n      omitted[key] = object[key];\n    }\n  });\n  return [picked, omitted];\n}\n/**\n * Get value from a deeply nested object using a string path.\n * Memoizes the value.\n * @param obj - the object\n * @param path - the string path\n * @param def  - the fallback value\n */\n\nfunction get(obj, path, fallback, index) {\n  var key = typeof path === \"string\" ? path.split(\".\") : [path];\n\n  for (index = 0; index < key.length; index += 1) {\n    if (!obj) break;\n    obj = obj[key[index]];\n  }\n\n  return obj === undefined ? fallback : obj;\n}\nvar memoize = function memoize(fn) {\n  var cache = new WeakMap();\n\n  var memoizedFn = function memoizedFn(obj, path, fallback, index) {\n    if (typeof obj === \"undefined\") {\n      return fn(obj, path, fallback);\n    }\n\n    if (!cache.has(obj)) {\n      cache.set(obj, new Map());\n    }\n\n    var map = cache.get(obj);\n\n    if (map.has(path)) {\n      return map.get(path);\n    }\n\n    var value = fn(obj, path, fallback, index);\n    map.set(path, value);\n    return value;\n  };\n\n  return memoizedFn;\n};\nvar memoizedGet = memoize(get);\n/**\n * Get value from deeply nested object, based on path\n * It returns the path value if not found in object\n *\n * @param path - the string path or value\n * @param scale - the string path or value\n */\n\nfunction getWithDefault(path, scale) {\n  return memoizedGet(scale, path, path);\n}\n\n/**\n * Returns the items of an object that meet the condition specified in a callback function.\n *\n * @param object the object to loop through\n * @param fn The filter function\n */\nfunction objectFilter(object, fn) {\n  var result = {};\n  Object.keys(object).forEach(function (key) {\n    var value = object[key];\n    var shouldPass = fn(value, key, object);\n\n    if (shouldPass) {\n      result[key] = value;\n    }\n  });\n  return result;\n}\nvar filterUndefined = function filterUndefined(object) {\n  return objectFilter(object, function (val) {\n    return val !== null && val !== undefined;\n  });\n};\nvar objectKeys = function objectKeys(obj) {\n  return Object.keys(obj);\n};\n/**\n * Object.entries polyfill for Nodev10 compatibility\n */\n\nvar fromEntries = function fromEntries(entries) {\n  return entries.reduce(function (carry, _ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    carry[key] = value;\n    return carry;\n  }, {});\n};\n/**\n * Get the CSS variable ref stored in the theme\n */\n\nvar getCSSVar = function getCSSVar(theme, scale, value) {\n  var _theme$__cssMap$$varR, _theme$__cssMap$;\n\n  return (_theme$__cssMap$$varR = (_theme$__cssMap$ = theme.__cssMap[scale + \".\" + value]) == null ? void 0 : _theme$__cssMap$.varRef) != null ? _theme$__cssMap$$varR : value;\n};\n\nfunction analyzeCSSValue(value) {\n  var num = parseFloat(value.toString());\n  var unit = value.toString().replace(String(num), \"\");\n  return {\n    unitless: !unit,\n    value: num,\n    unit: unit\n  };\n}\n\nfunction px(value) {\n  if (value == null) return value;\n\n  var _analyzeCSSValue = analyzeCSSValue(value),\n      unitless = _analyzeCSSValue.unitless;\n\n  return unitless || isNumber(value) ? value + \"px\" : value;\n}\n\nvar sortByBreakpointValue = function sortByBreakpointValue(a, b) {\n  return parseInt(a[1], 10) > parseInt(b[1], 10) ? 1 : -1;\n};\n\nvar sortBps = function sortBps(breakpoints) {\n  return fromEntries(Object.entries(breakpoints).sort(sortByBreakpointValue));\n};\n\nfunction normalize(breakpoints) {\n  var sorted = sortBps(breakpoints);\n  return Object.assign(Object.values(sorted), sorted);\n}\n\nfunction keys(breakpoints) {\n  var value = Object.keys(sortBps(breakpoints));\n  return new Set(value);\n}\n\nfunction subtract(value) {\n  var _px;\n\n  if (!value) return value;\n  value = (_px = px(value)) != null ? _px : value;\n  var factor = value.endsWith(\"px\") ? -1 : // the equivalent of 1px in em using a 16px base\n  -0.0635;\n  return isNumber(value) ? \"\" + (value + factor) : value.replace(/([0-9]+\\.?[0-9]*)/, function (m) {\n    return \"\" + (parseFloat(m) + factor);\n  });\n}\n\nfunction queryString(min, max) {\n  var query = [];\n  if (min) query.push(\"@media screen and (min-width: \" + px(min) + \")\");\n  if (query.length > 0 && max) query.push(\"and\");\n  if (max) query.push(\"@media screen and (max-width: \" + px(max) + \")\");\n  return query.join(\" \");\n}\n\nfunction analyzeBreakpoints(breakpoints) {\n  var _breakpoints$base;\n\n  if (!breakpoints) return null;\n  breakpoints.base = (_breakpoints$base = breakpoints.base) != null ? _breakpoints$base : \"0px\";\n  var normalized = normalize(breakpoints);\n  var queries = Object.entries(breakpoints).sort(sortByBreakpointValue).map(function (_ref, index, entry) {\n    var _entry;\n\n    var breakpoint = _ref[0],\n        minW = _ref[1];\n\n    var _ref2 = (_entry = entry[index + 1]) != null ? _entry : [],\n        maxW = _ref2[1];\n\n    maxW = parseFloat(maxW) > 0 ? subtract(maxW) : undefined;\n    return {\n      breakpoint: breakpoint,\n      minW: minW,\n      maxW: maxW,\n      maxWQuery: queryString(null, maxW),\n      minWQuery: queryString(minW),\n      minMaxQuery: queryString(minW, maxW)\n    };\n  });\n\n  var _keys = keys(breakpoints);\n\n  var _keysArr = Array.from(_keys.values());\n\n  return {\n    keys: _keys,\n    normalized: normalized,\n    isResponsive: function isResponsive(test) {\n      var keys = Object.keys(test);\n      return keys.length > 0 && keys.every(function (key) {\n        return _keys.has(key);\n      });\n    },\n    asObject: sortBps(breakpoints),\n    asArray: normalize(breakpoints),\n    details: queries,\n    media: [null].concat(normalized.map(function (minW) {\n      return queryString(minW);\n    }).slice(1)),\n    toArrayValue: function toArrayValue(test) {\n      if (!isObject(test)) {\n        throw new Error(\"toArrayValue: value must be an object\");\n      }\n\n      var result = _keysArr.map(function (bp) {\n        var _test$bp;\n\n        return (_test$bp = test[bp]) != null ? _test$bp : null;\n      });\n\n      while (getLastItem(result) === null) {\n        result.pop();\n      }\n\n      return result;\n    },\n    toObjectValue: function toObjectValue(test) {\n      if (!Array.isArray(test)) {\n        throw new Error(\"toObjectValue: value must be an array\");\n      }\n\n      return test.reduce(function (acc, value, index) {\n        var key = _keysArr[index];\n        if (key != null && value != null) acc[key] = value;\n        return acc;\n      }, {});\n    }\n  };\n}\n\nfunction isElement(el) {\n  return el != null && typeof el == \"object\" && \"nodeType\" in el && el.nodeType === Node.ELEMENT_NODE;\n}\nfunction isHTMLElement(el) {\n  var _el$ownerDocument$def;\n\n  if (!isElement(el)) {\n    return false;\n  }\n\n  var win = (_el$ownerDocument$def = el.ownerDocument.defaultView) != null ? _el$ownerDocument$def : window;\n  return el instanceof win.HTMLElement;\n}\nfunction getOwnerWindow(node) {\n  var _getOwnerDocument$def, _getOwnerDocument;\n\n  return isElement(node) ? (_getOwnerDocument$def = (_getOwnerDocument = getOwnerDocument(node)) == null ? void 0 : _getOwnerDocument.defaultView) != null ? _getOwnerDocument$def : window : window;\n}\nfunction getOwnerDocument(node) {\n  var _node$ownerDocument;\n\n  return isElement(node) ? (_node$ownerDocument = node.ownerDocument) != null ? _node$ownerDocument : document : document;\n}\nfunction getEventWindow(event) {\n  var _view;\n\n  return (_view = event.view) != null ? _view : window;\n}\nfunction canUseDOM() {\n  return !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n}\nvar isBrowser = canUseDOM();\nvar dataAttr = function dataAttr(condition) {\n  return condition ? \"\" : undefined;\n};\nvar ariaAttr = function ariaAttr(condition) {\n  return condition ? true : undefined;\n};\nvar cx = function cx() {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n\n  return classNames.filter(Boolean).join(\" \");\n};\nfunction getActiveElement(node) {\n  var doc = getOwnerDocument(node);\n  return doc == null ? void 0 : doc.activeElement;\n}\nfunction contains(parent, child) {\n  if (!parent) return false;\n  return parent === child || parent.contains(child);\n}\nfunction addDomEvent(target, eventName, handler, options) {\n  target.addEventListener(eventName, handler, options);\n  return function () {\n    target.removeEventListener(eventName, handler, options);\n  };\n}\n/**\n * Get the normalized event key across all browsers\n * @param event keyboard event\n */\n\nfunction normalizeEventKey(event) {\n  var key = event.key,\n      keyCode = event.keyCode;\n  var isArrowKey = keyCode >= 37 && keyCode <= 40 && key.indexOf(\"Arrow\") !== 0;\n  var eventKey = isArrowKey ? \"Arrow\" + key : key;\n  return eventKey;\n}\nfunction getRelatedTarget(event) {\n  var _event$target, _event$relatedTarget;\n\n  var target = (_event$target = event.target) != null ? _event$target : event.currentTarget;\n  var activeElement = getActiveElement(target);\n  return (_event$relatedTarget = event.relatedTarget) != null ? _event$relatedTarget : activeElement;\n}\nfunction isRightClick(event) {\n  return event.button !== 0;\n}\n\n// Really great work done by Diego Haz on this one\nvar hasDisplayNone = function hasDisplayNone(element) {\n  return window.getComputedStyle(element).display === \"none\";\n};\nvar hasTabIndex = function hasTabIndex(element) {\n  return element.hasAttribute(\"tabindex\");\n};\nvar hasNegativeTabIndex = function hasNegativeTabIndex(element) {\n  return hasTabIndex(element) && element.tabIndex === -1;\n};\nfunction isDisabled(element) {\n  return Boolean(element.getAttribute(\"disabled\")) === true || Boolean(element.getAttribute(\"aria-disabled\")) === true;\n}\nfunction isInputElement(element) {\n  return isHTMLElement(element) && element.tagName.toLowerCase() === \"input\" && \"select\" in element;\n}\nfunction isActiveElement(element) {\n  var doc = isHTMLElement(element) ? getOwnerDocument(element) : document;\n  return doc.activeElement === element;\n}\nfunction hasFocusWithin(element) {\n  if (!document.activeElement) return false;\n  return element.contains(document.activeElement);\n}\nfunction isHidden(element) {\n  if (element.parentElement && isHidden(element.parentElement)) return true;\n  return element.hidden;\n}\nfunction isContentEditable(element) {\n  var value = element.getAttribute(\"contenteditable\");\n  return value !== \"false\" && value != null;\n}\nfunction isFocusable(element) {\n  if (!isHTMLElement(element) || isHidden(element) || isDisabled(element)) {\n    return false;\n  }\n\n  var localName = element.localName;\n  var focusableTags = [\"input\", \"select\", \"textarea\", \"button\"];\n  if (focusableTags.indexOf(localName) >= 0) return true;\n  var others = {\n    a: function a() {\n      return element.hasAttribute(\"href\");\n    },\n    audio: function audio() {\n      return element.hasAttribute(\"controls\");\n    },\n    video: function video() {\n      return element.hasAttribute(\"controls\");\n    }\n  };\n\n  if (localName in others) {\n    return others[localName]();\n  }\n\n  if (isContentEditable(element)) return true;\n  return hasTabIndex(element);\n}\nfunction isTabbable(element) {\n  if (!element) return false;\n  return isHTMLElement(element) && isFocusable(element) && !hasNegativeTabIndex(element);\n}\n\nvar focusableElList = [\"input:not([disabled])\", \"select:not([disabled])\", \"textarea:not([disabled])\", \"embed\", \"iframe\", \"object\", \"a[href]\", \"area[href]\", \"button:not([disabled])\", \"[tabindex]\", \"audio[controls]\", \"video[controls]\", \"*[tabindex]:not([aria-disabled])\", \"*[contenteditable]\"];\nvar focusableElSelector = focusableElList.join();\nfunction getAllFocusable(container) {\n  var focusableEls = Array.from(container.querySelectorAll(focusableElSelector));\n  focusableEls.unshift(container);\n  return focusableEls.filter(isFocusable).filter(function (el) {\n    return window.getComputedStyle(el).display !== \"none\";\n  });\n}\nfunction getFirstFocusable(container) {\n  var allFocusable = getAllFocusable(container);\n  return allFocusable.length ? allFocusable[0] : null;\n}\nfunction getAllTabbable(container, fallbackToFocusable) {\n  var allFocusable = Array.from(container.querySelectorAll(focusableElSelector));\n  var allTabbable = allFocusable.filter(isTabbable);\n\n  if (isTabbable(container)) {\n    allTabbable.unshift(container);\n  }\n\n  if (!allTabbable.length && fallbackToFocusable) {\n    return allFocusable;\n  }\n\n  return allTabbable;\n}\nfunction getFirstTabbableIn(container, fallbackToFocusable) {\n  var _getAllTabbable = getAllTabbable(container, fallbackToFocusable),\n      first = _getAllTabbable[0];\n\n  return first || null;\n}\nfunction getLastTabbableIn(container, fallbackToFocusable) {\n  var allTabbable = getAllTabbable(container, fallbackToFocusable);\n  return allTabbable[allTabbable.length - 1] || null;\n}\nfunction getNextTabbable(container, fallbackToFocusable) {\n  var allFocusable = getAllFocusable(container);\n  var index = allFocusable.indexOf(document.activeElement);\n  var slice = allFocusable.slice(index + 1);\n  return slice.find(isTabbable) || allFocusable.find(isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\nfunction getPreviousTabbable(container, fallbackToFocusable) {\n  var allFocusable = getAllFocusable(container).reverse();\n  var index = allFocusable.indexOf(document.activeElement);\n  var slice = allFocusable.slice(index + 1);\n  return slice.find(isTabbable) || allFocusable.find(isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\nfunction focusNextTabbable(container, fallbackToFocusable) {\n  var nextTabbable = getNextTabbable(container, fallbackToFocusable);\n\n  if (nextTabbable && isHTMLElement(nextTabbable)) {\n    nextTabbable.focus();\n  }\n}\nfunction focusPreviousTabbable(container, fallbackToFocusable) {\n  var previousTabbable = getPreviousTabbable(container, fallbackToFocusable);\n\n  if (previousTabbable && isHTMLElement(previousTabbable)) {\n    previousTabbable.focus();\n  }\n}\n\nfunction matches(element, selectors) {\n  if (\"matches\" in element) return element.matches(selectors);\n  if (\"msMatchesSelector\" in element) return element.msMatchesSelector(selectors);\n  return element.webkitMatchesSelector(selectors);\n}\n\nfunction closest(element, selectors) {\n  if (\"closest\" in element) return element.closest(selectors);\n\n  do {\n    if (matches(element, selectors)) return element;\n    element = element.parentElement || element.parentNode;\n  } while (element !== null && element.nodeType === 1);\n\n  return null;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n/* eslint-disable no-nested-ternary */\nfunction runIfFn(valueOrFn) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return isFunction(valueOrFn) ? valueOrFn.apply(void 0, args) : valueOrFn;\n}\nfunction callAllHandlers() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return function func(event) {\n    fns.some(function (fn) {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n}\nfunction callAll() {\n  for (var _len3 = arguments.length, fns = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    fns[_key3] = arguments[_key3];\n  }\n\n  return function mergedFn(arg) {\n    fns.forEach(function (fn) {\n      fn == null ? void 0 : fn(arg);\n    });\n  };\n}\nvar compose = function compose(fn1) {\n  for (var _len4 = arguments.length, fns = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    fns[_key4 - 1] = arguments[_key4];\n  }\n\n  return fns.reduce(function (f1, f2) {\n    return function () {\n      return f1(f2.apply(void 0, arguments));\n    };\n  }, fn1);\n};\nfunction once(fn) {\n  var result;\n  return function func() {\n    if (fn) {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      result = fn.apply(this, args);\n      fn = null;\n    }\n\n    return result;\n  };\n}\nvar noop = function noop() {};\nvar warn = once(function (options) {\n  return function () {\n    var condition = options.condition,\n        message = options.message;\n\n    if (condition && __DEV__) {\n      console.warn(message);\n    }\n  };\n});\nvar error = once(function (options) {\n  return function () {\n    var condition = options.condition,\n        message = options.message;\n\n    if (condition && __DEV__) {\n      console.error(message);\n    }\n  };\n});\nvar pipe = function pipe() {\n  for (var _len6 = arguments.length, fns = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    fns[_key6] = arguments[_key6];\n  }\n\n  return function (v) {\n    return fns.reduce(function (a, b) {\n      return b(a);\n    }, v);\n  };\n};\n\nvar distance1D = function distance1D(a, b) {\n  return Math.abs(a - b);\n};\n\nvar isPoint = function isPoint(point) {\n  return \"x\" in point && \"y\" in point;\n};\n\nfunction distance(a, b) {\n  if (isNumber(a) && isNumber(b)) {\n    return distance1D(a, b);\n  }\n\n  if (isPoint(a) && isPoint(b)) {\n    var xDelta = distance1D(a.x, b.x);\n    var yDelta = distance1D(a.y, b.y);\n    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2));\n  }\n\n  return 0;\n}\n\nfunction focus(element, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$isActive = _options.isActive,\n      isActive = _options$isActive === void 0 ? isActiveElement : _options$isActive,\n      nextTick = _options.nextTick,\n      _options$preventScrol = _options.preventScroll,\n      preventScroll = _options$preventScrol === void 0 ? true : _options$preventScrol,\n      _options$selectTextIf = _options.selectTextIfInput,\n      selectTextIfInput = _options$selectTextIf === void 0 ? true : _options$selectTextIf;\n  if (!element || isActive(element)) return -1;\n\n  function triggerFocus() {\n    if (!element) {\n      warn({\n        condition: true,\n        message: \"[chakra-ui]: can't call focus() on `null` or `undefined` element\"\n      });\n      return;\n    }\n\n    if (supportsPreventScroll()) {\n      element.focus({\n        preventScroll: preventScroll\n      });\n    } else {\n      element.focus();\n\n      if (preventScroll) {\n        var scrollableElements = getScrollableElements(element);\n        restoreScrollPosition(scrollableElements);\n      }\n    }\n\n    if (isInputElement(element) && selectTextIfInput) {\n      element.select();\n    }\n  }\n\n  if (nextTick) {\n    return requestAnimationFrame(triggerFocus);\n  }\n\n  triggerFocus();\n  return -1;\n}\nvar supportsPreventScrollCached = null;\n\nfunction supportsPreventScroll() {\n  if (supportsPreventScrollCached == null) {\n    supportsPreventScrollCached = false;\n\n    try {\n      var div = document.createElement(\"div\");\n      div.focus({\n        get preventScroll() {\n          supportsPreventScrollCached = true;\n          return true;\n        }\n\n      });\n    } catch (e) {// Ignore\n    }\n  }\n\n  return supportsPreventScrollCached;\n}\n\nfunction getScrollableElements(element) {\n  var _doc$defaultView;\n\n  var doc = getOwnerDocument(element);\n  var win = (_doc$defaultView = doc.defaultView) != null ? _doc$defaultView : window;\n  var parent = element.parentNode;\n  var scrollableElements = [];\n  var rootScrollingElement = doc.scrollingElement || doc.documentElement;\n\n  while (parent instanceof win.HTMLElement && parent !== rootScrollingElement) {\n    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth) {\n      scrollableElements.push({\n        element: parent,\n        scrollTop: parent.scrollTop,\n        scrollLeft: parent.scrollLeft\n      });\n    }\n\n    parent = parent.parentNode;\n  }\n\n  if (rootScrollingElement instanceof win.HTMLElement) {\n    scrollableElements.push({\n      element: rootScrollingElement,\n      scrollTop: rootScrollingElement.scrollTop,\n      scrollLeft: rootScrollingElement.scrollLeft\n    });\n  }\n\n  return scrollableElements;\n}\n\nfunction restoreScrollPosition(scrollableElements) {\n  for (var _iterator = _createForOfIteratorHelperLoose(scrollableElements), _step; !(_step = _iterator()).done;) {\n    var _step$value = _step.value,\n        element = _step$value.element,\n        scrollTop = _step$value.scrollTop,\n        scrollLeft = _step$value.scrollLeft;\n    element.scrollTop = scrollTop;\n    element.scrollLeft = scrollLeft;\n  }\n}\n\n/**\n * Determines whether the children of a disclosure widget\n * should be rendered or not, depending on the lazy behavior.\n *\n * Used in accordion, tabs, popover, menu and other disclosure\n * widgets.\n */\nfunction determineLazyBehavior(options) {\n  var hasBeenSelected = options.hasBeenSelected,\n      isLazy = options.isLazy,\n      isSelected = options.isSelected,\n      _options$lazyBehavior = options.lazyBehavior,\n      lazyBehavior = _options$lazyBehavior === void 0 ? \"unmount\" : _options$lazyBehavior; // if not lazy, always render the disclosure's content\n\n  if (!isLazy) return true; // if the diclosure is selected, render the disclosure's content\n\n  if (isSelected) return true; // if the disclosure was selected but not active, keep its content active\n\n  if (lazyBehavior === \"keepMounted\" && hasBeenSelected) return true;\n  return false;\n}\n\nvar minSafeInteger = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nfunction toNumber(value) {\n  var num = parseFloat(value);\n  return isNotNumber(num) ? 0 : num;\n}\n/**\n * Converts a value to a specific precision (or decimal points).\n *\n * Returns a string representing a number in fixed-point notation.\n *\n * @param value the value to convert\n * @param precision the precision or decimal points\n */\n\n\nfunction toPrecision(value, precision) {\n  var nextValue = toNumber(value);\n  var scaleFactor = Math.pow(10, precision != null ? precision : 10);\n  nextValue = Math.round(nextValue * scaleFactor) / scaleFactor;\n  return precision ? nextValue.toFixed(precision) : nextValue.toString();\n}\n/**\n * Counts the number of decimal places a number has\n *\n * @param value the decimal value to count\n */\n\nfunction countDecimalPlaces(value) {\n  if (!Number.isFinite(value)) return 0;\n  var e = 1;\n  var p = 0;\n\n  while (Math.round(value * e) / e !== value) {\n    e *= 10;\n    p += 1;\n  }\n\n  return p;\n}\n/**\n * Convert a value to percentage based on lower and upper bound values\n *\n * @param value the value in number\n * @param min the minimum value\n * @param max the maximum value\n */\n\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\n/**\n * Calculate the value based on percentage, lower and upper bound values\n *\n * @param percent the percent value in decimals (e.g 0.6, 0.3)\n * @param min the minimum value\n * @param max the maximum value\n */\n\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\n/**\n * Rounds a specific value to the next or previous step\n *\n * @param value the value to round\n * @param from the number that stepping started from\n * @param step the specified step\n */\n\nfunction roundValueToStep(value, from, step) {\n  var nextValue = Math.round((value - from) / step) * step + from;\n  var precision = countDecimalPlaces(step);\n  return toPrecision(nextValue, precision);\n}\n/**\n * Clamps a value to ensure it stays within the min and max range.\n *\n * @param value the value to clamp\n * @param min the minimum value\n * @param max the maximum value\n */\n\nfunction clampValue(value, min, max) {\n  if (value == null) return value;\n  warn({\n    condition: max < min,\n    message: \"clamp: max cannot be less than min\"\n  });\n  return Math.min(Math.max(value, min), max);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n/**\n * Credit goes to `framer-motion` of this useful utilities.\n * License can be found here: https://github.com/framer/motion\n */\nfunction isMouseEvent(event) {\n  var win = getEventWindow(event); // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n\n  if (typeof win.PointerEvent !== \"undefined\" && event instanceof win.PointerEvent) {\n    return !!(event.pointerType === \"mouse\");\n  }\n\n  return event instanceof win.MouseEvent;\n}\nfunction isTouchEvent(event) {\n  var hasTouches = !!event.touches;\n  return hasTouches;\n}\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n  return function (event) {\n    var win = getEventWindow(event);\n    var isMouseEvent = event instanceof win.MouseEvent;\n    var isPrimaryPointer = !isMouseEvent || isMouseEvent && event.button === 0;\n\n    if (isPrimaryPointer) {\n      eventHandler(event);\n    }\n  };\n}\n\nvar defaultPagePoint = {\n  pageX: 0,\n  pageY: 0\n};\n\nfunction pointFromTouch(e, pointType) {\n  if (pointType === void 0) {\n    pointType = \"page\";\n  }\n\n  var primaryTouch = e.touches[0] || e.changedTouches[0];\n  var point = primaryTouch || defaultPagePoint;\n  return {\n    x: point[pointType + \"X\"],\n    y: point[pointType + \"Y\"]\n  };\n}\n\nfunction pointFromMouse(point, pointType) {\n  if (pointType === void 0) {\n    pointType = \"page\";\n  }\n\n  return {\n    x: point[pointType + \"X\"],\n    y: point[pointType + \"Y\"]\n  };\n}\n\nfunction extractEventInfo(event, pointType) {\n  if (pointType === void 0) {\n    pointType = \"page\";\n  }\n\n  return {\n    point: isTouchEvent(event) ? pointFromTouch(event, pointType) : pointFromMouse(event, pointType)\n  };\n}\nfunction getViewportPointFromEvent(event) {\n  return extractEventInfo(event, \"client\");\n}\nvar wrapPointerEventHandler = function wrapPointerEventHandler(handler, shouldFilterPrimaryPointer) {\n  if (shouldFilterPrimaryPointer === void 0) {\n    shouldFilterPrimaryPointer = false;\n  }\n\n  var listener = function listener(event) {\n    return handler(event, extractEventInfo(event));\n  };\n\n  return shouldFilterPrimaryPointer ? filterPrimaryPointer(listener) : listener;\n}; // We check for event support via functions in case they've been mocked by a testing suite.\n\nvar supportsPointerEvents = function supportsPointerEvents() {\n  return isBrowser && window.onpointerdown === null;\n};\n\nvar supportsTouchEvents = function supportsTouchEvents() {\n  return isBrowser && window.ontouchstart === null;\n};\n\nvar supportsMouseEvents = function supportsMouseEvents() {\n  return isBrowser && window.onmousedown === null;\n};\n\nvar mouseEventNames = {\n  pointerdown: \"mousedown\",\n  pointermove: \"mousemove\",\n  pointerup: \"mouseup\",\n  pointercancel: \"mousecancel\",\n  pointerover: \"mouseover\",\n  pointerout: \"mouseout\",\n  pointerenter: \"mouseenter\",\n  pointerleave: \"mouseleave\"\n};\nvar touchEventNames = {\n  pointerdown: \"touchstart\",\n  pointermove: \"touchmove\",\n  pointerup: \"touchend\",\n  pointercancel: \"touchcancel\"\n};\nfunction getPointerEventName(name) {\n  if (supportsPointerEvents()) {\n    return name;\n  }\n\n  if (supportsTouchEvents()) {\n    return touchEventNames[name];\n  }\n\n  if (supportsMouseEvents()) {\n    return mouseEventNames[name];\n  }\n\n  return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n  return addDomEvent(target, getPointerEventName(eventName), wrapPointerEventHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction isMultiTouchEvent(event) {\n  return isTouchEvent(event) && event.touches.length > 1;\n}\n\n/**\n * The event information passed to pan event handlers like `onPan`, `onPanStart`.\n *\n * It contains information about the current state of the tap gesture such as its\n * `point`, `delta`, and `offset`\n */\n\n/**\n * @internal\n *\n * A Pan Session is recognized when the pointer is down\n * and moved in the allowed direction.\n */\nvar PanSession = /*#__PURE__*/function () {\n  /**\n   * We use this to keep track of the `x` and `y` pan session history\n   * as the pan event happens. It helps to calculate the `offset` and `delta`\n   */\n  // The pointer event that started the pan session\n  // The current pointer event for the pan session\n  // The current pointer event info for the pan session\n\n  /**\n   * Minimal pan distance required before recognizing the pan.\n   * @default \"3px\"\n   */\n  function PanSession(_event, handlers, threshold) {\n    var _this = this;\n\n    this.history = [];\n    this.startEvent = null;\n    this.lastEvent = null;\n    this.lastEventInfo = null;\n    this.handlers = {};\n    this.removeListeners = noop;\n    this.threshold = 3;\n    this.win = void 0;\n\n    this.updatePoint = function () {\n      if (!(_this.lastEvent && _this.lastEventInfo)) return;\n      var info = getPanInfo(_this.lastEventInfo, _this.history);\n      var isPanStarted = _this.startEvent !== null;\n\n      var isDistancePastThreshold = distance(info.offset, {\n        x: 0,\n        y: 0\n      }) >= _this.threshold;\n\n      if (!isPanStarted && !isDistancePastThreshold) return;\n\n      var _getFrameData = getFrameData(),\n          timestamp = _getFrameData.timestamp;\n\n      _this.history.push(_extends({}, info.point, {\n        timestamp: timestamp\n      }));\n\n      var _this$handlers = _this.handlers,\n          onStart = _this$handlers.onStart,\n          onMove = _this$handlers.onMove;\n\n      if (!isPanStarted) {\n        onStart == null ? void 0 : onStart(_this.lastEvent, info);\n        _this.startEvent = _this.lastEvent;\n      }\n\n      onMove == null ? void 0 : onMove(_this.lastEvent, info);\n    };\n\n    this.onPointerMove = function (event, info) {\n      _this.lastEvent = event;\n      _this.lastEventInfo = info; // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n\n      if (isMouseEvent(event) && event.buttons === 0) {\n        _this.onPointerUp(event, info);\n\n        return;\n      } // Throttle mouse move event to once per frame\n\n\n      sync.update(_this.updatePoint, true);\n    };\n\n    this.onPointerUp = function (event, info) {\n      // notify pan session ended\n      var panInfo = getPanInfo(info, _this.history);\n      var _this$handlers2 = _this.handlers,\n          onEnd = _this$handlers2.onEnd,\n          onSessionEnd = _this$handlers2.onSessionEnd;\n      onSessionEnd == null ? void 0 : onSessionEnd(event, panInfo);\n\n      _this.end(); // if panning never started, no need to call `onEnd`\n      // panning requires a pointermove of at least 3px\n\n\n      if (!onEnd || !_this.startEvent) return;\n      onEnd == null ? void 0 : onEnd(event, panInfo);\n    };\n\n    this.win = getEventWindow(_event); // If we have more than one touch, don't start detecting this gesture\n\n    if (isMultiTouchEvent(_event)) return;\n    this.handlers = handlers;\n\n    if (threshold) {\n      this.threshold = threshold;\n    } // stop default browser behavior\n\n\n    _event.stopPropagation();\n\n    _event.preventDefault(); // get and save the `pointerdown` event info in history\n    // we'll use it to compute the `offset`\n\n\n    var _info = extractEventInfo(_event);\n\n    var _getFrameData2 = getFrameData(),\n        _timestamp = _getFrameData2.timestamp;\n\n    this.history = [_extends({}, _info.point, {\n      timestamp: _timestamp\n    })]; // notify pan session start\n\n    var onSessionStart = handlers.onSessionStart;\n    onSessionStart == null ? void 0 : onSessionStart(_event, getPanInfo(_info, this.history)); // attach event listeners and return a single function to remove them all\n\n    this.removeListeners = pipe(addPointerEvent(this.win, \"pointermove\", this.onPointerMove), addPointerEvent(this.win, \"pointerup\", this.onPointerUp), addPointerEvent(this.win, \"pointercancel\", this.onPointerUp));\n  }\n\n  var _proto = PanSession.prototype;\n\n  _proto.updateHandlers = function updateHandlers(handlers) {\n    this.handlers = handlers;\n  };\n\n  _proto.end = function end() {\n    var _this$removeListeners;\n\n    (_this$removeListeners = this.removeListeners) == null ? void 0 : _this$removeListeners.call(this);\n    cancelSync.update(this.updatePoint);\n  };\n\n  return PanSession;\n}();\n\nfunction subtractPoint(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\n\nfunction startPanPoint(history) {\n  return history[0];\n}\n\nfunction lastPanPoint(history) {\n  return history[history.length - 1];\n}\n\nfunction getPanInfo(info, history) {\n  return {\n    point: info.point,\n    delta: subtractPoint(info.point, lastPanPoint(history)),\n    offset: subtractPoint(info.point, startPanPoint(history)),\n    velocity: getVelocity(history, 0.1)\n  };\n}\n\nfunction lastDevicePoint(history) {\n  return history[history.length - 1];\n}\n\nvar toMilliseconds = function toMilliseconds(seconds) {\n  return seconds * 1000;\n};\n\nfunction getVelocity(history, timeDelta) {\n  if (history.length < 2) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var i = history.length - 1;\n  var timestampedPoint = null;\n  var lastPoint = lastDevicePoint(history);\n\n  while (i >= 0) {\n    timestampedPoint = history[i];\n\n    if (lastPoint.timestamp - timestampedPoint.timestamp > toMilliseconds(timeDelta)) {\n      break;\n    }\n\n    i--;\n  }\n\n  if (!timestampedPoint) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n\n  if (time === 0) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n\n  return currentVelocity;\n}\n\nvar breakpoints = Object.freeze([\"base\", \"sm\", \"md\", \"lg\", \"xl\", \"2xl\"]);\nfunction mapResponsive(prop, mapper) {\n  if (isArray(prop)) {\n    return prop.map(function (item) {\n      if (item === null) {\n        return null;\n      }\n\n      return mapper(item);\n    });\n  }\n\n  if (isObject(prop)) {\n    return objectKeys(prop).reduce(function (result, key) {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n\n  if (prop != null) {\n    return mapper(prop);\n  }\n\n  return null;\n}\nfunction objectToArrayNotation(obj, bps) {\n  if (bps === void 0) {\n    bps = breakpoints;\n  }\n\n  var result = bps.map(function (br) {\n    var _obj$br;\n\n    return (_obj$br = obj[br]) != null ? _obj$br : null;\n  });\n\n  while (getLastItem(result) === null) {\n    result.pop();\n  }\n\n  return result;\n}\nfunction arrayToObjectNotation(values, bps) {\n  if (bps === void 0) {\n    bps = breakpoints;\n  }\n\n  var result = {};\n  values.forEach(function (value, index) {\n    var key = bps[index];\n    if (value == null) return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps) {\n  if (bps === void 0) {\n    bps = breakpoints;\n  }\n\n  var keys = Object.keys(obj);\n  return keys.length > 0 && keys.every(function (key) {\n    return bps.includes(key);\n  });\n}\n/**\n * since breakpoints are defined as custom properties on an array, you may\n * `Object.keys(theme.breakpoints)` to retrieve both regular numeric indices\n * and custom breakpoints as string.\n *\n * This function returns true given a custom array property.\n */\n\nvar isCustomBreakpoint = function isCustomBreakpoint(maybeBreakpoint) {\n  return Number.isNaN(Number(maybeBreakpoint));\n};\n\nfunction getUserAgentBrowser(navigator) {\n  var ua = navigator.userAgent,\n      vendor = navigator.vendor;\n  var android = /(android)/i.test(ua);\n\n  switch (true) {\n    case /CriOS/.test(ua):\n      return \"Chrome for iOS\";\n\n    case /Edg\\//.test(ua):\n      return \"Edge\";\n\n    case android && /Silk\\//.test(ua):\n      return \"Silk\";\n\n    case /Chrome/.test(ua) && /Google Inc/.test(vendor):\n      return \"Chrome\";\n\n    case /Firefox\\/\\d+\\.\\d+$/.test(ua):\n      return \"Firefox\";\n\n    case android:\n      return \"AOSP\";\n\n    case /MSIE|Trident/.test(ua):\n      return \"IE\";\n\n    case /Safari/.test(navigator.userAgent) && /Apple Computer/.test(ua):\n      return \"Safari\";\n\n    case /AppleWebKit/.test(ua):\n      return \"WebKit\";\n\n    default:\n      return null;\n  }\n}\n\nfunction getUserAgentOS(navigator) {\n  var ua = navigator.userAgent,\n      platform = navigator.platform;\n\n  switch (true) {\n    case /Android/.test(ua):\n      return \"Android\";\n\n    case /iPhone|iPad|iPod/.test(platform):\n      return \"iOS\";\n\n    case /Win/.test(platform):\n      return \"Windows\";\n\n    case /Mac/.test(platform):\n      return \"Mac\";\n\n    case /CrOS/.test(ua):\n      return \"Chrome OS\";\n\n    case /Firefox/.test(ua):\n      return \"Firefox OS\";\n\n    default:\n      return null;\n  }\n}\n\nfunction detectDeviceType(navigator) {\n  var ua = navigator.userAgent;\n  if (/(tablet)|(iPad)|(Nexus 9)/i.test(ua)) return \"tablet\";\n  if (/(mobi)/i.test(ua)) return \"phone\";\n  return \"desktop\";\n}\nfunction detectOS(os) {\n  if (!isBrowser) return false;\n  return getUserAgentOS(window.navigator) === os;\n}\nfunction detectBrowser(browser) {\n  if (!isBrowser) return false;\n  return getUserAgentBrowser(window.navigator) === browser;\n}\nfunction detectTouch() {\n  if (!isBrowser) return false;\n  return window.ontouchstart === null && window.ontouchmove === null && window.ontouchend === null;\n}\n\nfunction walkObject(target, predicate) {\n  function inner(value, path) {\n    if (path === void 0) {\n      path = [];\n    }\n\n    if (isArray(value)) {\n      return value.map(function (item, index) {\n        return inner(item, [].concat(path, [String(index)]));\n      });\n    }\n\n    if (isObject(value)) {\n      return fromEntries(Object.entries(value).map(function (_ref) {\n        var key = _ref[0],\n            child = _ref[1];\n        return [key, inner(child, [].concat(path, [key]))];\n      }));\n    }\n\n    return predicate(value, path);\n  }\n\n  return inner(target);\n}\n\nexport { PanSession, __DEV__, __TEST__, addDomEvent, addItem, addPointerEvent, analyzeBreakpoints, ariaAttr, arrayToObjectNotation, breakpoints, callAll, callAllHandlers, canUseDOM, chunk, clampValue, closest, compose, contains, countDecimalPlaces, cx, dataAttr, detectBrowser, detectDeviceType, detectOS, detectTouch, determineLazyBehavior, distance, error, extractEventInfo, filterUndefined, focus, focusNextTabbable, focusPreviousTabbable, fromEntries, get, getActiveElement, getAllFocusable, getAllTabbable, getCSSVar, getEventWindow, getFirstFocusable, getFirstItem, getFirstTabbableIn, getLastItem, getLastTabbableIn, getNextIndex, getNextItem, getNextItemFromSearch, getNextTabbable, getOwnerDocument, getOwnerWindow, getPointerEventName, getPrevIndex, getPrevItem, getPreviousTabbable, getRelatedTarget, getViewportPointFromEvent, getWithDefault, hasDisplayNone, hasFocusWithin, hasNegativeTabIndex, hasTabIndex, isActiveElement, isArray, isBrowser, isContentEditable, isCssVar, isCustomBreakpoint, isDefined, isDisabled, isElement, isEmpty, isEmptyArray, isEmptyObject, isFocusable, isFunction, isHTMLElement, isHidden, isInputElement, isInputEvent, isMouseEvent, isMultiTouchEvent, isNotEmptyObject, isNotNumber, isNull, isNumber, isNumeric, isObject, isRefObject, isResponsiveObjectLike, isRightClick, isString, isTabbable, isTouchEvent, isUndefined, mapResponsive, maxSafeInteger, memoize, memoizedGet, minSafeInteger, noop, normalizeEventKey, objectFilter, objectKeys, objectToArrayNotation, omit, once, percentToValue, pick, pipe, px, removeIndex, removeItem, roundValueToStep, runIfFn, split, toPrecision, valueToPercent, walkObject, warn, wrapPointerEventHandler };\n","import { useCallbackRef, useControllableProp } from '@chakra-ui/hooks';\nimport { countDecimalPlaces, clampValue, toPrecision, minSafeInteger, maxSafeInteger } from '@chakra-ui/utils';\nimport { useState, useCallback } from 'react';\n\nfunction useCounter(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      onChange = _props.onChange,\n      precisionProp = _props.precision,\n      defaultValue = _props.defaultValue,\n      valueProp = _props.value,\n      _props$step = _props.step,\n      stepProp = _props$step === void 0 ? 1 : _props$step,\n      _props$min = _props.min,\n      min = _props$min === void 0 ? minSafeInteger : _props$min,\n      _props$max = _props.max,\n      max = _props$max === void 0 ? maxSafeInteger : _props$max,\n      _props$keepWithinRang = _props.keepWithinRange,\n      keepWithinRange = _props$keepWithinRang === void 0 ? true : _props$keepWithinRang;\n  var onChangeProp = useCallbackRef(onChange);\n\n  var _useState = useState(function () {\n    var _cast;\n\n    if (defaultValue == null) return \"\";\n    return (_cast = cast(defaultValue, stepProp, precisionProp)) != null ? _cast : \"\";\n  }),\n      valueState = _useState[0],\n      setValue = _useState[1];\n  /**\n   * Because the component that consumes this hook can be controlled or uncontrolled\n   * we'll keep track of that\n   */\n\n\n  var _useControllableProp = useControllableProp(valueProp, valueState),\n      isControlled = _useControllableProp[0],\n      value = _useControllableProp[1];\n\n  var decimalPlaces = getDecimalPlaces(parse(value), stepProp);\n  var precision = precisionProp != null ? precisionProp : decimalPlaces;\n  var update = useCallback(function (next) {\n    if (next === value) return;\n\n    if (!isControlled) {\n      setValue(next.toString());\n    }\n\n    onChangeProp == null ? void 0 : onChangeProp(next.toString(), parse(next));\n  }, [onChangeProp, isControlled, value]); // Function to clamp the value and round it to the precision\n\n  var clamp = useCallback(function (value) {\n    var nextValue = value;\n\n    if (keepWithinRange) {\n      nextValue = clampValue(nextValue, min, max);\n    }\n\n    return toPrecision(nextValue, precision);\n  }, [precision, keepWithinRange, max, min]);\n  var increment = useCallback(function (step) {\n    if (step === void 0) {\n      step = stepProp;\n    }\n\n    var next;\n    /**\n     * Let's follow the native browser behavior for\n     * scenarios where the input starts empty (\"\")\n     */\n\n    if (value === \"\") {\n      /**\n       * If `min` is set, native input, starts at the `min`.\n       * Else, it starts at `step`\n       */\n      next = parse(step);\n    } else {\n      next = parse(value) + step;\n    }\n\n    next = clamp(next);\n    update(next);\n  }, [clamp, stepProp, update, value]);\n  var decrement = useCallback(function (step) {\n    if (step === void 0) {\n      step = stepProp;\n    }\n\n    var next; // Same thing here. We'll follow native implementation\n\n    if (value === \"\") {\n      next = parse(-step);\n    } else {\n      next = parse(value) - step;\n    }\n\n    next = clamp(next);\n    update(next);\n  }, [clamp, stepProp, update, value]);\n  var reset = useCallback(function () {\n    var next;\n\n    if (defaultValue == null) {\n      next = \"\";\n    } else {\n      var _cast2;\n\n      next = (_cast2 = cast(defaultValue, stepProp, precisionProp)) != null ? _cast2 : min;\n    }\n\n    update(next);\n  }, [defaultValue, precisionProp, stepProp, update, min]);\n  var castValue = useCallback(function (value) {\n    var _cast3;\n\n    var nextValue = (_cast3 = cast(value, stepProp, precision)) != null ? _cast3 : min;\n    update(nextValue);\n  }, [precision, stepProp, update, min]);\n  var valueAsNumber = parse(value);\n  /**\n   * Common range checks\n   */\n\n  var isOutOfRange = valueAsNumber > max || valueAsNumber < min;\n  var isAtMax = valueAsNumber === max;\n  var isAtMin = valueAsNumber === min;\n  return {\n    isOutOfRange: isOutOfRange,\n    isAtMax: isAtMax,\n    isAtMin: isAtMin,\n    precision: precision,\n    value: value,\n    valueAsNumber: valueAsNumber,\n    update: update,\n    reset: reset,\n    increment: increment,\n    decrement: decrement,\n    clamp: clamp,\n    cast: castValue,\n    setValue: setValue\n  };\n}\n\nfunction parse(value) {\n  return parseFloat(value.toString().replace(/[^\\w.-]+/g, \"\"));\n}\n\nfunction getDecimalPlaces(value, step) {\n  return Math.max(countDecimalPlaces(step), countDecimalPlaces(value));\n}\n\nfunction cast(value, step, precision) {\n  var parsedValue = parse(value);\n  if (Number.isNaN(parsedValue)) return undefined;\n  var decimalPlaces = getDecimalPlaces(parsedValue, step);\n  return toPrecision(parsedValue, precision != null ? precision : decimalPlaces);\n}\n\nexport { useCounter };\n","export * from 'css-box-model';\nexport { default as mergeWith } from 'lodash.mergewith';\nimport sync, { cancelSync, getFrameData } from 'framesync';\n\nfunction getFirstItem(array) {\n  return array != null && array.length ? array[0] : undefined;\n}\nfunction getLastItem(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\nfunction getPrevItem(index, array, loop) {\n  if (loop === void 0) {\n    loop = true;\n  }\n\n  var prevIndex = getPrevIndex(index, array.length, loop);\n  return array[prevIndex];\n}\nfunction getNextItem(index, array, loop) {\n  if (loop === void 0) {\n    loop = true;\n  }\n\n  var nextIndex = getNextIndex(index, array.length, 1, loop);\n  return array[nextIndex];\n}\nfunction removeIndex(array, index) {\n  return array.filter(function (_, idx) {\n    return idx !== index;\n  });\n}\nfunction addItem(array, item) {\n  return [].concat(array, [item]);\n}\nfunction removeItem(array, item) {\n  return array.filter(function (eachItem) {\n    return eachItem !== item;\n  });\n}\n/**\n * Get the next index based on the current index and step.\n *\n * @param currentIndex the current index\n * @param length the total length or count of items\n * @param step the number of steps\n * @param loop whether to circle back once `currentIndex` is at the start/end\n */\n\nfunction getNextIndex(currentIndex, length, step, loop) {\n  if (step === void 0) {\n    step = 1;\n  }\n\n  if (loop === void 0) {\n    loop = true;\n  }\n\n  var lastIndex = length - 1;\n\n  if (currentIndex === -1) {\n    return step > 0 ? 0 : lastIndex;\n  }\n\n  var nextIndex = currentIndex + step;\n\n  if (nextIndex < 0) {\n    return loop ? lastIndex : 0;\n  }\n\n  if (nextIndex >= length) {\n    if (loop) return 0;\n    return currentIndex > length ? length : currentIndex;\n  }\n\n  return nextIndex;\n}\n/**\n * Get's the previous index based on the current index.\n * Mostly used for keyboard navigation.\n *\n * @param index - the current index\n * @param count - the length or total count of items in the array\n * @param loop - whether we should circle back to the\n * first/last once `currentIndex` is at the start/end\n */\n\nfunction getPrevIndex(index, count, loop) {\n  if (loop === void 0) {\n    loop = true;\n  }\n\n  return getNextIndex(index, count, -1, loop);\n}\n/**\n * Converts an array into smaller chunks or groups.\n *\n * @param array the array to chunk into group\n * @param size the length of each chunk\n */\n\nfunction chunk(array, size) {\n  return array.reduce(function (rows, currentValue, index) {\n    if (index % size === 0) {\n      rows.push([currentValue]);\n    } else {\n      rows[rows.length - 1].push(currentValue);\n    }\n\n    return rows;\n  }, []);\n}\n/**\n * Gets the next item based on a search string\n *\n * @param items array of items\n * @param searchString the search string\n * @param itemToString resolves an item to string\n * @param currentItem the current selected item\n */\n\nfunction getNextItemFromSearch(items, searchString, itemToString, currentItem) {\n  if (searchString == null) {\n    return currentItem;\n  } // If current item doesn't exist, find the item that matches the search string\n\n\n  if (!currentItem) {\n    var foundItem = items.find(function (item) {\n      return itemToString(item).toLowerCase().startsWith(searchString.toLowerCase());\n    });\n    return foundItem;\n  } // Filter items for ones that match the search string (case insensitive)\n\n\n  var matchingItems = items.filter(function (item) {\n    return itemToString(item).toLowerCase().startsWith(searchString.toLowerCase());\n  }); // If there's a match, let's get the next item to select\n\n  if (matchingItems.length > 0) {\n    var nextIndex; // If the currentItem is in the available items, we move to the next available option\n\n    if (matchingItems.includes(currentItem)) {\n      var currentIndex = matchingItems.indexOf(currentItem);\n      nextIndex = currentIndex + 1;\n\n      if (nextIndex === matchingItems.length) {\n        nextIndex = 0;\n      }\n\n      return matchingItems[nextIndex];\n    } // Else, we pick the first item in the available items\n\n\n    nextIndex = items.indexOf(matchingItems[0]);\n    return items[nextIndex];\n  } // a decent fallback to the currentItem\n\n\n  return currentItem;\n}\n\n// Number assertions\nfunction isNumber(value) {\n  return typeof value === \"number\";\n}\nfunction isNotNumber(value) {\n  return typeof value !== \"number\" || Number.isNaN(value) || !Number.isFinite(value);\n}\nfunction isNumeric(value) {\n  return value != null && value - parseFloat(value) + 1 >= 0;\n} // Array assertions\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\nfunction isEmptyArray(value) {\n  return isArray(value) && value.length === 0;\n} // Function assertions\n\nfunction isFunction(value) {\n  return typeof value === \"function\";\n} // Generic assertions\n\nfunction isDefined(value) {\n  return typeof value !== \"undefined\" && value !== undefined;\n}\nfunction isUndefined(value) {\n  return typeof value === \"undefined\" || value === undefined;\n} // Object assertions\n\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !isArray(value);\n}\nfunction isEmptyObject(value) {\n  return isObject(value) && Object.keys(value).length === 0;\n}\nfunction isNotEmptyObject(value) {\n  return value && !isEmptyObject(value);\n}\nfunction isNull(value) {\n  return value == null;\n} // String assertions\n\nfunction isString(value) {\n  return Object.prototype.toString.call(value) === \"[object String]\";\n}\nfunction isCssVar(value) {\n  return /^var\\(--.+\\)$/.test(value);\n} // Empty assertions\n\nfunction isEmpty(value) {\n  if (isArray(value)) return isEmptyArray(value);\n  if (isObject(value)) return isEmptyObject(value);\n  if (value == null || value === \"\") return true;\n  return false;\n}\nvar __DEV__ = process.env.NODE_ENV !== \"production\";\nvar __TEST__ = process.env.NODE_ENV === \"test\";\nfunction isRefObject(val) {\n  return \"current\" in val;\n}\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\n\nfunction omit(object, keys) {\n  var result = {};\n  Object.keys(object).forEach(function (key) {\n    if (keys.includes(key)) return;\n    result[key] = object[key];\n  });\n  return result;\n}\nfunction pick(object, keys) {\n  var result = {};\n  keys.forEach(function (key) {\n    if (key in object) {\n      result[key] = object[key];\n    }\n  });\n  return result;\n}\nfunction split(object, keys) {\n  var picked = {};\n  var omitted = {};\n  Object.keys(object).forEach(function (key) {\n    if (keys.includes(key)) {\n      picked[key] = object[key];\n    } else {\n      omitted[key] = object[key];\n    }\n  });\n  return [picked, omitted];\n}\n/**\n * Get value from a deeply nested object using a string path.\n * Memoizes the value.\n * @param obj - the object\n * @param path - the string path\n * @param def  - the fallback value\n */\n\nfunction get(obj, path, fallback, index) {\n  var key = typeof path === \"string\" ? path.split(\".\") : [path];\n\n  for (index = 0; index < key.length; index += 1) {\n    if (!obj) break;\n    obj = obj[key[index]];\n  }\n\n  return obj === undefined ? fallback : obj;\n}\nvar memoize = function memoize(fn) {\n  var cache = new WeakMap();\n\n  var memoizedFn = function memoizedFn(obj, path, fallback, index) {\n    if (typeof obj === \"undefined\") {\n      return fn(obj, path, fallback);\n    }\n\n    if (!cache.has(obj)) {\n      cache.set(obj, new Map());\n    }\n\n    var map = cache.get(obj);\n\n    if (map.has(path)) {\n      return map.get(path);\n    }\n\n    var value = fn(obj, path, fallback, index);\n    map.set(path, value);\n    return value;\n  };\n\n  return memoizedFn;\n};\nvar memoizedGet = memoize(get);\n/**\n * Get value from deeply nested object, based on path\n * It returns the path value if not found in object\n *\n * @param path - the string path or value\n * @param scale - the string path or value\n */\n\nfunction getWithDefault(path, scale) {\n  return memoizedGet(scale, path, path);\n}\n\n/**\n * Returns the items of an object that meet the condition specified in a callback function.\n *\n * @param object the object to loop through\n * @param fn The filter function\n */\nfunction objectFilter(object, fn) {\n  var result = {};\n  Object.keys(object).forEach(function (key) {\n    var value = object[key];\n    var shouldPass = fn(value, key, object);\n\n    if (shouldPass) {\n      result[key] = value;\n    }\n  });\n  return result;\n}\nvar filterUndefined = function filterUndefined(object) {\n  return objectFilter(object, function (val) {\n    return val !== null && val !== undefined;\n  });\n};\nvar objectKeys = function objectKeys(obj) {\n  return Object.keys(obj);\n};\n/**\n * Object.entries polyfill for Nodev10 compatibility\n */\n\nvar fromEntries = function fromEntries(entries) {\n  return entries.reduce(function (carry, _ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    carry[key] = value;\n    return carry;\n  }, {});\n};\n/**\n * Get the CSS variable ref stored in the theme\n */\n\nvar getCSSVar = function getCSSVar(theme, scale, value) {\n  var _theme$__cssMap$$varR, _theme$__cssMap$;\n\n  return (_theme$__cssMap$$varR = (_theme$__cssMap$ = theme.__cssMap[scale + \".\" + value]) == null ? void 0 : _theme$__cssMap$.varRef) != null ? _theme$__cssMap$$varR : value;\n};\n\nfunction analyzeCSSValue(value) {\n  var num = parseFloat(value.toString());\n  var unit = value.toString().replace(String(num), \"\");\n  return {\n    unitless: !unit,\n    value: num,\n    unit: unit\n  };\n}\n\nfunction px(value) {\n  if (value == null) return value;\n\n  var _analyzeCSSValue = analyzeCSSValue(value),\n      unitless = _analyzeCSSValue.unitless;\n\n  return unitless || isNumber(value) ? value + \"px\" : value;\n}\n\nvar sortByBreakpointValue = function sortByBreakpointValue(a, b) {\n  return parseInt(a[1], 10) > parseInt(b[1], 10) ? 1 : -1;\n};\n\nvar sortBps = function sortBps(breakpoints) {\n  return fromEntries(Object.entries(breakpoints).sort(sortByBreakpointValue));\n};\n\nfunction normalize(breakpoints) {\n  var sorted = sortBps(breakpoints);\n  return Object.assign(Object.values(sorted), sorted);\n}\n\nfunction keys(breakpoints) {\n  var value = Object.keys(sortBps(breakpoints));\n  return new Set(value);\n}\n\nfunction subtract(value) {\n  var _px;\n\n  if (!value) return value;\n  value = (_px = px(value)) != null ? _px : value;\n  var factor = value.endsWith(\"px\") ? -1 : // the equivalent of 1px in em using a 16px base\n  -0.0635;\n  return isNumber(value) ? \"\" + (value + factor) : value.replace(/([0-9]+\\.?[0-9]*)/, function (m) {\n    return \"\" + (parseFloat(m) + factor);\n  });\n}\n\nfunction queryString(min, max) {\n  var query = [];\n  if (min) query.push(\"@media screen and (min-width: \" + px(min) + \")\");\n  if (query.length > 0 && max) query.push(\"and\");\n  if (max) query.push(\"@media screen and (max-width: \" + px(max) + \")\");\n  return query.join(\" \");\n}\n\nfunction analyzeBreakpoints(breakpoints) {\n  var _breakpoints$base;\n\n  if (!breakpoints) return null;\n  breakpoints.base = (_breakpoints$base = breakpoints.base) != null ? _breakpoints$base : \"0px\";\n  var normalized = normalize(breakpoints);\n  var queries = Object.entries(breakpoints).sort(sortByBreakpointValue).map(function (_ref, index, entry) {\n    var _entry;\n\n    var breakpoint = _ref[0],\n        minW = _ref[1];\n\n    var _ref2 = (_entry = entry[index + 1]) != null ? _entry : [],\n        maxW = _ref2[1];\n\n    maxW = parseFloat(maxW) > 0 ? subtract(maxW) : undefined;\n    return {\n      breakpoint: breakpoint,\n      minW: minW,\n      maxW: maxW,\n      maxWQuery: queryString(null, maxW),\n      minWQuery: queryString(minW),\n      minMaxQuery: queryString(minW, maxW)\n    };\n  });\n\n  var _keys = keys(breakpoints);\n\n  var _keysArr = Array.from(_keys.values());\n\n  return {\n    keys: _keys,\n    normalized: normalized,\n    isResponsive: function isResponsive(test) {\n      var keys = Object.keys(test);\n      return keys.length > 0 && keys.every(function (key) {\n        return _keys.has(key);\n      });\n    },\n    asObject: sortBps(breakpoints),\n    asArray: normalize(breakpoints),\n    details: queries,\n    media: [null].concat(normalized.map(function (minW) {\n      return queryString(minW);\n    }).slice(1)),\n    toArrayValue: function toArrayValue(test) {\n      if (!isObject(test)) {\n        throw new Error(\"toArrayValue: value must be an object\");\n      }\n\n      var result = _keysArr.map(function (bp) {\n        var _test$bp;\n\n        return (_test$bp = test[bp]) != null ? _test$bp : null;\n      });\n\n      while (getLastItem(result) === null) {\n        result.pop();\n      }\n\n      return result;\n    },\n    toObjectValue: function toObjectValue(test) {\n      if (!Array.isArray(test)) {\n        throw new Error(\"toObjectValue: value must be an array\");\n      }\n\n      return test.reduce(function (acc, value, index) {\n        var key = _keysArr[index];\n        if (key != null && value != null) acc[key] = value;\n        return acc;\n      }, {});\n    }\n  };\n}\n\nfunction isElement(el) {\n  return el != null && typeof el == \"object\" && \"nodeType\" in el && el.nodeType === Node.ELEMENT_NODE;\n}\nfunction isHTMLElement(el) {\n  var _el$ownerDocument$def;\n\n  if (!isElement(el)) {\n    return false;\n  }\n\n  var win = (_el$ownerDocument$def = el.ownerDocument.defaultView) != null ? _el$ownerDocument$def : window;\n  return el instanceof win.HTMLElement;\n}\nfunction getOwnerWindow(node) {\n  var _getOwnerDocument$def, _getOwnerDocument;\n\n  return isElement(node) ? (_getOwnerDocument$def = (_getOwnerDocument = getOwnerDocument(node)) == null ? void 0 : _getOwnerDocument.defaultView) != null ? _getOwnerDocument$def : window : window;\n}\nfunction getOwnerDocument(node) {\n  var _node$ownerDocument;\n\n  return isElement(node) ? (_node$ownerDocument = node.ownerDocument) != null ? _node$ownerDocument : document : document;\n}\nfunction getEventWindow(event) {\n  var _view;\n\n  return (_view = event.view) != null ? _view : window;\n}\nfunction canUseDOM() {\n  return !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n}\nvar isBrowser = canUseDOM();\nvar dataAttr = function dataAttr(condition) {\n  return condition ? \"\" : undefined;\n};\nvar ariaAttr = function ariaAttr(condition) {\n  return condition ? true : undefined;\n};\nvar cx = function cx() {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n\n  return classNames.filter(Boolean).join(\" \");\n};\nfunction getActiveElement(node) {\n  var doc = getOwnerDocument(node);\n  return doc == null ? void 0 : doc.activeElement;\n}\nfunction contains(parent, child) {\n  if (!parent) return false;\n  return parent === child || parent.contains(child);\n}\nfunction addDomEvent(target, eventName, handler, options) {\n  target.addEventListener(eventName, handler, options);\n  return function () {\n    target.removeEventListener(eventName, handler, options);\n  };\n}\n/**\n * Get the normalized event key across all browsers\n * @param event keyboard event\n */\n\nfunction normalizeEventKey(event) {\n  var key = event.key,\n      keyCode = event.keyCode;\n  var isArrowKey = keyCode >= 37 && keyCode <= 40 && key.indexOf(\"Arrow\") !== 0;\n  var eventKey = isArrowKey ? \"Arrow\" + key : key;\n  return eventKey;\n}\nfunction getRelatedTarget(event) {\n  var _event$target, _event$relatedTarget;\n\n  var target = (_event$target = event.target) != null ? _event$target : event.currentTarget;\n  var activeElement = getActiveElement(target);\n  return (_event$relatedTarget = event.relatedTarget) != null ? _event$relatedTarget : activeElement;\n}\nfunction isRightClick(event) {\n  return event.button !== 0;\n}\n\n// Really great work done by Diego Haz on this one\nvar hasDisplayNone = function hasDisplayNone(element) {\n  return window.getComputedStyle(element).display === \"none\";\n};\nvar hasTabIndex = function hasTabIndex(element) {\n  return element.hasAttribute(\"tabindex\");\n};\nvar hasNegativeTabIndex = function hasNegativeTabIndex(element) {\n  return hasTabIndex(element) && element.tabIndex === -1;\n};\nfunction isDisabled(element) {\n  return Boolean(element.getAttribute(\"disabled\")) === true || Boolean(element.getAttribute(\"aria-disabled\")) === true;\n}\nfunction isInputElement(element) {\n  return isHTMLElement(element) && element.tagName.toLowerCase() === \"input\" && \"select\" in element;\n}\nfunction isActiveElement(element) {\n  var doc = isHTMLElement(element) ? getOwnerDocument(element) : document;\n  return doc.activeElement === element;\n}\nfunction hasFocusWithin(element) {\n  if (!document.activeElement) return false;\n  return element.contains(document.activeElement);\n}\nfunction isHidden(element) {\n  if (element.parentElement && isHidden(element.parentElement)) return true;\n  return element.hidden;\n}\nfunction isContentEditable(element) {\n  var value = element.getAttribute(\"contenteditable\");\n  return value !== \"false\" && value != null;\n}\nfunction isFocusable(element) {\n  if (!isHTMLElement(element) || isHidden(element) || isDisabled(element)) {\n    return false;\n  }\n\n  var localName = element.localName;\n  var focusableTags = [\"input\", \"select\", \"textarea\", \"button\"];\n  if (focusableTags.indexOf(localName) >= 0) return true;\n  var others = {\n    a: function a() {\n      return element.hasAttribute(\"href\");\n    },\n    audio: function audio() {\n      return element.hasAttribute(\"controls\");\n    },\n    video: function video() {\n      return element.hasAttribute(\"controls\");\n    }\n  };\n\n  if (localName in others) {\n    return others[localName]();\n  }\n\n  if (isContentEditable(element)) return true;\n  return hasTabIndex(element);\n}\nfunction isTabbable(element) {\n  if (!element) return false;\n  return isHTMLElement(element) && isFocusable(element) && !hasNegativeTabIndex(element);\n}\n\nvar focusableElList = [\"input:not([disabled])\", \"select:not([disabled])\", \"textarea:not([disabled])\", \"embed\", \"iframe\", \"object\", \"a[href]\", \"area[href]\", \"button:not([disabled])\", \"[tabindex]\", \"audio[controls]\", \"video[controls]\", \"*[tabindex]:not([aria-disabled])\", \"*[contenteditable]\"];\nvar focusableElSelector = focusableElList.join();\nfunction getAllFocusable(container) {\n  var focusableEls = Array.from(container.querySelectorAll(focusableElSelector));\n  focusableEls.unshift(container);\n  return focusableEls.filter(isFocusable).filter(function (el) {\n    return window.getComputedStyle(el).display !== \"none\";\n  });\n}\nfunction getFirstFocusable(container) {\n  var allFocusable = getAllFocusable(container);\n  return allFocusable.length ? allFocusable[0] : null;\n}\nfunction getAllTabbable(container, fallbackToFocusable) {\n  var allFocusable = Array.from(container.querySelectorAll(focusableElSelector));\n  var allTabbable = allFocusable.filter(isTabbable);\n\n  if (isTabbable(container)) {\n    allTabbable.unshift(container);\n  }\n\n  if (!allTabbable.length && fallbackToFocusable) {\n    return allFocusable;\n  }\n\n  return allTabbable;\n}\nfunction getFirstTabbableIn(container, fallbackToFocusable) {\n  var _getAllTabbable = getAllTabbable(container, fallbackToFocusable),\n      first = _getAllTabbable[0];\n\n  return first || null;\n}\nfunction getLastTabbableIn(container, fallbackToFocusable) {\n  var allTabbable = getAllTabbable(container, fallbackToFocusable);\n  return allTabbable[allTabbable.length - 1] || null;\n}\nfunction getNextTabbable(container, fallbackToFocusable) {\n  var allFocusable = getAllFocusable(container);\n  var index = allFocusable.indexOf(document.activeElement);\n  var slice = allFocusable.slice(index + 1);\n  return slice.find(isTabbable) || allFocusable.find(isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\nfunction getPreviousTabbable(container, fallbackToFocusable) {\n  var allFocusable = getAllFocusable(container).reverse();\n  var index = allFocusable.indexOf(document.activeElement);\n  var slice = allFocusable.slice(index + 1);\n  return slice.find(isTabbable) || allFocusable.find(isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\nfunction focusNextTabbable(container, fallbackToFocusable) {\n  var nextTabbable = getNextTabbable(container, fallbackToFocusable);\n\n  if (nextTabbable && isHTMLElement(nextTabbable)) {\n    nextTabbable.focus();\n  }\n}\nfunction focusPreviousTabbable(container, fallbackToFocusable) {\n  var previousTabbable = getPreviousTabbable(container, fallbackToFocusable);\n\n  if (previousTabbable && isHTMLElement(previousTabbable)) {\n    previousTabbable.focus();\n  }\n}\n\nfunction matches(element, selectors) {\n  if (\"matches\" in element) return element.matches(selectors);\n  if (\"msMatchesSelector\" in element) return element.msMatchesSelector(selectors);\n  return element.webkitMatchesSelector(selectors);\n}\n\nfunction closest(element, selectors) {\n  if (\"closest\" in element) return element.closest(selectors);\n\n  do {\n    if (matches(element, selectors)) return element;\n    element = element.parentElement || element.parentNode;\n  } while (element !== null && element.nodeType === 1);\n\n  return null;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n/* eslint-disable no-nested-ternary */\nfunction runIfFn(valueOrFn) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return isFunction(valueOrFn) ? valueOrFn.apply(void 0, args) : valueOrFn;\n}\nfunction callAllHandlers() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return function func(event) {\n    fns.some(function (fn) {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n}\nfunction callAll() {\n  for (var _len3 = arguments.length, fns = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    fns[_key3] = arguments[_key3];\n  }\n\n  return function mergedFn(arg) {\n    fns.forEach(function (fn) {\n      fn == null ? void 0 : fn(arg);\n    });\n  };\n}\nvar compose = function compose(fn1) {\n  for (var _len4 = arguments.length, fns = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    fns[_key4 - 1] = arguments[_key4];\n  }\n\n  return fns.reduce(function (f1, f2) {\n    return function () {\n      return f1(f2.apply(void 0, arguments));\n    };\n  }, fn1);\n};\nfunction once(fn) {\n  var result;\n  return function func() {\n    if (fn) {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      result = fn.apply(this, args);\n      fn = null;\n    }\n\n    return result;\n  };\n}\nvar noop = function noop() {};\nvar warn = once(function (options) {\n  return function () {\n    var condition = options.condition,\n        message = options.message;\n\n    if (condition && __DEV__) {\n      console.warn(message);\n    }\n  };\n});\nvar error = once(function (options) {\n  return function () {\n    var condition = options.condition,\n        message = options.message;\n\n    if (condition && __DEV__) {\n      console.error(message);\n    }\n  };\n});\nvar pipe = function pipe() {\n  for (var _len6 = arguments.length, fns = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    fns[_key6] = arguments[_key6];\n  }\n\n  return function (v) {\n    return fns.reduce(function (a, b) {\n      return b(a);\n    }, v);\n  };\n};\n\nvar distance1D = function distance1D(a, b) {\n  return Math.abs(a - b);\n};\n\nvar isPoint = function isPoint(point) {\n  return \"x\" in point && \"y\" in point;\n};\n\nfunction distance(a, b) {\n  if (isNumber(a) && isNumber(b)) {\n    return distance1D(a, b);\n  }\n\n  if (isPoint(a) && isPoint(b)) {\n    var xDelta = distance1D(a.x, b.x);\n    var yDelta = distance1D(a.y, b.y);\n    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2));\n  }\n\n  return 0;\n}\n\nfunction focus(element, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$isActive = _options.isActive,\n      isActive = _options$isActive === void 0 ? isActiveElement : _options$isActive,\n      nextTick = _options.nextTick,\n      _options$preventScrol = _options.preventScroll,\n      preventScroll = _options$preventScrol === void 0 ? true : _options$preventScrol,\n      _options$selectTextIf = _options.selectTextIfInput,\n      selectTextIfInput = _options$selectTextIf === void 0 ? true : _options$selectTextIf;\n  if (!element || isActive(element)) return -1;\n\n  function triggerFocus() {\n    if (!element) {\n      warn({\n        condition: true,\n        message: \"[chakra-ui]: can't call focus() on `null` or `undefined` element\"\n      });\n      return;\n    }\n\n    if (supportsPreventScroll()) {\n      element.focus({\n        preventScroll: preventScroll\n      });\n    } else {\n      element.focus();\n\n      if (preventScroll) {\n        var scrollableElements = getScrollableElements(element);\n        restoreScrollPosition(scrollableElements);\n      }\n    }\n\n    if (isInputElement(element) && selectTextIfInput) {\n      element.select();\n    }\n  }\n\n  if (nextTick) {\n    return requestAnimationFrame(triggerFocus);\n  }\n\n  triggerFocus();\n  return -1;\n}\nvar supportsPreventScrollCached = null;\n\nfunction supportsPreventScroll() {\n  if (supportsPreventScrollCached == null) {\n    supportsPreventScrollCached = false;\n\n    try {\n      var div = document.createElement(\"div\");\n      div.focus({\n        get preventScroll() {\n          supportsPreventScrollCached = true;\n          return true;\n        }\n\n      });\n    } catch (e) {// Ignore\n    }\n  }\n\n  return supportsPreventScrollCached;\n}\n\nfunction getScrollableElements(element) {\n  var _doc$defaultView;\n\n  var doc = getOwnerDocument(element);\n  var win = (_doc$defaultView = doc.defaultView) != null ? _doc$defaultView : window;\n  var parent = element.parentNode;\n  var scrollableElements = [];\n  var rootScrollingElement = doc.scrollingElement || doc.documentElement;\n\n  while (parent instanceof win.HTMLElement && parent !== rootScrollingElement) {\n    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth) {\n      scrollableElements.push({\n        element: parent,\n        scrollTop: parent.scrollTop,\n        scrollLeft: parent.scrollLeft\n      });\n    }\n\n    parent = parent.parentNode;\n  }\n\n  if (rootScrollingElement instanceof win.HTMLElement) {\n    scrollableElements.push({\n      element: rootScrollingElement,\n      scrollTop: rootScrollingElement.scrollTop,\n      scrollLeft: rootScrollingElement.scrollLeft\n    });\n  }\n\n  return scrollableElements;\n}\n\nfunction restoreScrollPosition(scrollableElements) {\n  for (var _iterator = _createForOfIteratorHelperLoose(scrollableElements), _step; !(_step = _iterator()).done;) {\n    var _step$value = _step.value,\n        element = _step$value.element,\n        scrollTop = _step$value.scrollTop,\n        scrollLeft = _step$value.scrollLeft;\n    element.scrollTop = scrollTop;\n    element.scrollLeft = scrollLeft;\n  }\n}\n\n/**\n * Determines whether the children of a disclosure widget\n * should be rendered or not, depending on the lazy behavior.\n *\n * Used in accordion, tabs, popover, menu and other disclosure\n * widgets.\n */\nfunction determineLazyBehavior(options) {\n  var hasBeenSelected = options.hasBeenSelected,\n      isLazy = options.isLazy,\n      isSelected = options.isSelected,\n      _options$lazyBehavior = options.lazyBehavior,\n      lazyBehavior = _options$lazyBehavior === void 0 ? \"unmount\" : _options$lazyBehavior; // if not lazy, always render the disclosure's content\n\n  if (!isLazy) return true; // if the diclosure is selected, render the disclosure's content\n\n  if (isSelected) return true; // if the disclosure was selected but not active, keep its content active\n\n  if (lazyBehavior === \"keepMounted\" && hasBeenSelected) return true;\n  return false;\n}\n\nvar minSafeInteger = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nfunction toNumber(value) {\n  var num = parseFloat(value);\n  return isNotNumber(num) ? 0 : num;\n}\n/**\n * Converts a value to a specific precision (or decimal points).\n *\n * Returns a string representing a number in fixed-point notation.\n *\n * @param value the value to convert\n * @param precision the precision or decimal points\n */\n\n\nfunction toPrecision(value, precision) {\n  var nextValue = toNumber(value);\n  var scaleFactor = Math.pow(10, precision != null ? precision : 10);\n  nextValue = Math.round(nextValue * scaleFactor) / scaleFactor;\n  return precision ? nextValue.toFixed(precision) : nextValue.toString();\n}\n/**\n * Counts the number of decimal places a number has\n *\n * @param value the decimal value to count\n */\n\nfunction countDecimalPlaces(value) {\n  if (!Number.isFinite(value)) return 0;\n  var e = 1;\n  var p = 0;\n\n  while (Math.round(value * e) / e !== value) {\n    e *= 10;\n    p += 1;\n  }\n\n  return p;\n}\n/**\n * Convert a value to percentage based on lower and upper bound values\n *\n * @param value the value in number\n * @param min the minimum value\n * @param max the maximum value\n */\n\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\n/**\n * Calculate the value based on percentage, lower and upper bound values\n *\n * @param percent the percent value in decimals (e.g 0.6, 0.3)\n * @param min the minimum value\n * @param max the maximum value\n */\n\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\n/**\n * Rounds a specific value to the next or previous step\n *\n * @param value the value to round\n * @param from the number that stepping started from\n * @param step the specified step\n */\n\nfunction roundValueToStep(value, from, step) {\n  var nextValue = Math.round((value - from) / step) * step + from;\n  var precision = countDecimalPlaces(step);\n  return toPrecision(nextValue, precision);\n}\n/**\n * Clamps a value to ensure it stays within the min and max range.\n *\n * @param value the value to clamp\n * @param min the minimum value\n * @param max the maximum value\n */\n\nfunction clampValue(value, min, max) {\n  if (value == null) return value;\n  warn({\n    condition: max < min,\n    message: \"clamp: max cannot be less than min\"\n  });\n  return Math.min(Math.max(value, min), max);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n/**\n * Credit goes to `framer-motion` of this useful utilities.\n * License can be found here: https://github.com/framer/motion\n */\nfunction isMouseEvent(event) {\n  var win = getEventWindow(event); // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n\n  if (typeof win.PointerEvent !== \"undefined\" && event instanceof win.PointerEvent) {\n    return !!(event.pointerType === \"mouse\");\n  }\n\n  return event instanceof win.MouseEvent;\n}\nfunction isTouchEvent(event) {\n  var hasTouches = !!event.touches;\n  return hasTouches;\n}\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n  return function (event) {\n    var win = getEventWindow(event);\n    var isMouseEvent = event instanceof win.MouseEvent;\n    var isPrimaryPointer = !isMouseEvent || isMouseEvent && event.button === 0;\n\n    if (isPrimaryPointer) {\n      eventHandler(event);\n    }\n  };\n}\n\nvar defaultPagePoint = {\n  pageX: 0,\n  pageY: 0\n};\n\nfunction pointFromTouch(e, pointType) {\n  if (pointType === void 0) {\n    pointType = \"page\";\n  }\n\n  var primaryTouch = e.touches[0] || e.changedTouches[0];\n  var point = primaryTouch || defaultPagePoint;\n  return {\n    x: point[pointType + \"X\"],\n    y: point[pointType + \"Y\"]\n  };\n}\n\nfunction pointFromMouse(point, pointType) {\n  if (pointType === void 0) {\n    pointType = \"page\";\n  }\n\n  return {\n    x: point[pointType + \"X\"],\n    y: point[pointType + \"Y\"]\n  };\n}\n\nfunction extractEventInfo(event, pointType) {\n  if (pointType === void 0) {\n    pointType = \"page\";\n  }\n\n  return {\n    point: isTouchEvent(event) ? pointFromTouch(event, pointType) : pointFromMouse(event, pointType)\n  };\n}\nfunction getViewportPointFromEvent(event) {\n  return extractEventInfo(event, \"client\");\n}\nvar wrapPointerEventHandler = function wrapPointerEventHandler(handler, shouldFilterPrimaryPointer) {\n  if (shouldFilterPrimaryPointer === void 0) {\n    shouldFilterPrimaryPointer = false;\n  }\n\n  var listener = function listener(event) {\n    return handler(event, extractEventInfo(event));\n  };\n\n  return shouldFilterPrimaryPointer ? filterPrimaryPointer(listener) : listener;\n}; // We check for event support via functions in case they've been mocked by a testing suite.\n\nvar supportsPointerEvents = function supportsPointerEvents() {\n  return isBrowser && window.onpointerdown === null;\n};\n\nvar supportsTouchEvents = function supportsTouchEvents() {\n  return isBrowser && window.ontouchstart === null;\n};\n\nvar supportsMouseEvents = function supportsMouseEvents() {\n  return isBrowser && window.onmousedown === null;\n};\n\nvar mouseEventNames = {\n  pointerdown: \"mousedown\",\n  pointermove: \"mousemove\",\n  pointerup: \"mouseup\",\n  pointercancel: \"mousecancel\",\n  pointerover: \"mouseover\",\n  pointerout: \"mouseout\",\n  pointerenter: \"mouseenter\",\n  pointerleave: \"mouseleave\"\n};\nvar touchEventNames = {\n  pointerdown: \"touchstart\",\n  pointermove: \"touchmove\",\n  pointerup: \"touchend\",\n  pointercancel: \"touchcancel\"\n};\nfunction getPointerEventName(name) {\n  if (supportsPointerEvents()) {\n    return name;\n  }\n\n  if (supportsTouchEvents()) {\n    return touchEventNames[name];\n  }\n\n  if (supportsMouseEvents()) {\n    return mouseEventNames[name];\n  }\n\n  return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n  return addDomEvent(target, getPointerEventName(eventName), wrapPointerEventHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction isMultiTouchEvent(event) {\n  return isTouchEvent(event) && event.touches.length > 1;\n}\n\n/**\n * The event information passed to pan event handlers like `onPan`, `onPanStart`.\n *\n * It contains information about the current state of the tap gesture such as its\n * `point`, `delta`, and `offset`\n */\n\n/**\n * @internal\n *\n * A Pan Session is recognized when the pointer is down\n * and moved in the allowed direction.\n */\nvar PanSession = /*#__PURE__*/function () {\n  /**\n   * We use this to keep track of the `x` and `y` pan session history\n   * as the pan event happens. It helps to calculate the `offset` and `delta`\n   */\n  // The pointer event that started the pan session\n  // The current pointer event for the pan session\n  // The current pointer event info for the pan session\n\n  /**\n   * Minimal pan distance required before recognizing the pan.\n   * @default \"3px\"\n   */\n  function PanSession(_event, handlers, threshold) {\n    var _this = this;\n\n    this.history = [];\n    this.startEvent = null;\n    this.lastEvent = null;\n    this.lastEventInfo = null;\n    this.handlers = {};\n    this.removeListeners = noop;\n    this.threshold = 3;\n    this.win = void 0;\n\n    this.updatePoint = function () {\n      if (!(_this.lastEvent && _this.lastEventInfo)) return;\n      var info = getPanInfo(_this.lastEventInfo, _this.history);\n      var isPanStarted = _this.startEvent !== null;\n\n      var isDistancePastThreshold = distance(info.offset, {\n        x: 0,\n        y: 0\n      }) >= _this.threshold;\n\n      if (!isPanStarted && !isDistancePastThreshold) return;\n\n      var _getFrameData = getFrameData(),\n          timestamp = _getFrameData.timestamp;\n\n      _this.history.push(_extends({}, info.point, {\n        timestamp: timestamp\n      }));\n\n      var _this$handlers = _this.handlers,\n          onStart = _this$handlers.onStart,\n          onMove = _this$handlers.onMove;\n\n      if (!isPanStarted) {\n        onStart == null ? void 0 : onStart(_this.lastEvent, info);\n        _this.startEvent = _this.lastEvent;\n      }\n\n      onMove == null ? void 0 : onMove(_this.lastEvent, info);\n    };\n\n    this.onPointerMove = function (event, info) {\n      _this.lastEvent = event;\n      _this.lastEventInfo = info; // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n\n      if (isMouseEvent(event) && event.buttons === 0) {\n        _this.onPointerUp(event, info);\n\n        return;\n      } // Throttle mouse move event to once per frame\n\n\n      sync.update(_this.updatePoint, true);\n    };\n\n    this.onPointerUp = function (event, info) {\n      // notify pan session ended\n      var panInfo = getPanInfo(info, _this.history);\n      var _this$handlers2 = _this.handlers,\n          onEnd = _this$handlers2.onEnd,\n          onSessionEnd = _this$handlers2.onSessionEnd;\n      onSessionEnd == null ? void 0 : onSessionEnd(event, panInfo);\n\n      _this.end(); // if panning never started, no need to call `onEnd`\n      // panning requires a pointermove of at least 3px\n\n\n      if (!onEnd || !_this.startEvent) return;\n      onEnd == null ? void 0 : onEnd(event, panInfo);\n    };\n\n    this.win = getEventWindow(_event); // If we have more than one touch, don't start detecting this gesture\n\n    if (isMultiTouchEvent(_event)) return;\n    this.handlers = handlers;\n\n    if (threshold) {\n      this.threshold = threshold;\n    } // stop default browser behavior\n\n\n    _event.stopPropagation();\n\n    _event.preventDefault(); // get and save the `pointerdown` event info in history\n    // we'll use it to compute the `offset`\n\n\n    var _info = extractEventInfo(_event);\n\n    var _getFrameData2 = getFrameData(),\n        _timestamp = _getFrameData2.timestamp;\n\n    this.history = [_extends({}, _info.point, {\n      timestamp: _timestamp\n    })]; // notify pan session start\n\n    var onSessionStart = handlers.onSessionStart;\n    onSessionStart == null ? void 0 : onSessionStart(_event, getPanInfo(_info, this.history)); // attach event listeners and return a single function to remove them all\n\n    this.removeListeners = pipe(addPointerEvent(this.win, \"pointermove\", this.onPointerMove), addPointerEvent(this.win, \"pointerup\", this.onPointerUp), addPointerEvent(this.win, \"pointercancel\", this.onPointerUp));\n  }\n\n  var _proto = PanSession.prototype;\n\n  _proto.updateHandlers = function updateHandlers(handlers) {\n    this.handlers = handlers;\n  };\n\n  _proto.end = function end() {\n    var _this$removeListeners;\n\n    (_this$removeListeners = this.removeListeners) == null ? void 0 : _this$removeListeners.call(this);\n    cancelSync.update(this.updatePoint);\n  };\n\n  return PanSession;\n}();\n\nfunction subtractPoint(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\n\nfunction startPanPoint(history) {\n  return history[0];\n}\n\nfunction lastPanPoint(history) {\n  return history[history.length - 1];\n}\n\nfunction getPanInfo(info, history) {\n  return {\n    point: info.point,\n    delta: subtractPoint(info.point, lastPanPoint(history)),\n    offset: subtractPoint(info.point, startPanPoint(history)),\n    velocity: getVelocity(history, 0.1)\n  };\n}\n\nfunction lastDevicePoint(history) {\n  return history[history.length - 1];\n}\n\nvar toMilliseconds = function toMilliseconds(seconds) {\n  return seconds * 1000;\n};\n\nfunction getVelocity(history, timeDelta) {\n  if (history.length < 2) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var i = history.length - 1;\n  var timestampedPoint = null;\n  var lastPoint = lastDevicePoint(history);\n\n  while (i >= 0) {\n    timestampedPoint = history[i];\n\n    if (lastPoint.timestamp - timestampedPoint.timestamp > toMilliseconds(timeDelta)) {\n      break;\n    }\n\n    i--;\n  }\n\n  if (!timestampedPoint) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n\n  if (time === 0) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n\n  return currentVelocity;\n}\n\nvar breakpoints = Object.freeze([\"base\", \"sm\", \"md\", \"lg\", \"xl\", \"2xl\"]);\nfunction mapResponsive(prop, mapper) {\n  if (isArray(prop)) {\n    return prop.map(function (item) {\n      if (item === null) {\n        return null;\n      }\n\n      return mapper(item);\n    });\n  }\n\n  if (isObject(prop)) {\n    return objectKeys(prop).reduce(function (result, key) {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n\n  if (prop != null) {\n    return mapper(prop);\n  }\n\n  return null;\n}\nfunction objectToArrayNotation(obj, bps) {\n  if (bps === void 0) {\n    bps = breakpoints;\n  }\n\n  var result = bps.map(function (br) {\n    var _obj$br;\n\n    return (_obj$br = obj[br]) != null ? _obj$br : null;\n  });\n\n  while (getLastItem(result) === null) {\n    result.pop();\n  }\n\n  return result;\n}\nfunction arrayToObjectNotation(values, bps) {\n  if (bps === void 0) {\n    bps = breakpoints;\n  }\n\n  var result = {};\n  values.forEach(function (value, index) {\n    var key = bps[index];\n    if (value == null) return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps) {\n  if (bps === void 0) {\n    bps = breakpoints;\n  }\n\n  var keys = Object.keys(obj);\n  return keys.length > 0 && keys.every(function (key) {\n    return bps.includes(key);\n  });\n}\n/**\n * since breakpoints are defined as custom properties on an array, you may\n * `Object.keys(theme.breakpoints)` to retrieve both regular numeric indices\n * and custom breakpoints as string.\n *\n * This function returns true given a custom array property.\n */\n\nvar isCustomBreakpoint = function isCustomBreakpoint(maybeBreakpoint) {\n  return Number.isNaN(Number(maybeBreakpoint));\n};\n\nfunction getUserAgentBrowser(navigator) {\n  var ua = navigator.userAgent,\n      vendor = navigator.vendor;\n  var android = /(android)/i.test(ua);\n\n  switch (true) {\n    case /CriOS/.test(ua):\n      return \"Chrome for iOS\";\n\n    case /Edg\\//.test(ua):\n      return \"Edge\";\n\n    case android && /Silk\\//.test(ua):\n      return \"Silk\";\n\n    case /Chrome/.test(ua) && /Google Inc/.test(vendor):\n      return \"Chrome\";\n\n    case /Firefox\\/\\d+\\.\\d+$/.test(ua):\n      return \"Firefox\";\n\n    case android:\n      return \"AOSP\";\n\n    case /MSIE|Trident/.test(ua):\n      return \"IE\";\n\n    case /Safari/.test(navigator.userAgent) && /Apple Computer/.test(ua):\n      return \"Safari\";\n\n    case /AppleWebKit/.test(ua):\n      return \"WebKit\";\n\n    default:\n      return null;\n  }\n}\n\nfunction getUserAgentOS(navigator) {\n  var ua = navigator.userAgent,\n      platform = navigator.platform;\n\n  switch (true) {\n    case /Android/.test(ua):\n      return \"Android\";\n\n    case /iPhone|iPad|iPod/.test(platform):\n      return \"iOS\";\n\n    case /Win/.test(platform):\n      return \"Windows\";\n\n    case /Mac/.test(platform):\n      return \"Mac\";\n\n    case /CrOS/.test(ua):\n      return \"Chrome OS\";\n\n    case /Firefox/.test(ua):\n      return \"Firefox OS\";\n\n    default:\n      return null;\n  }\n}\n\nfunction detectDeviceType(navigator) {\n  var ua = navigator.userAgent;\n  if (/(tablet)|(iPad)|(Nexus 9)/i.test(ua)) return \"tablet\";\n  if (/(mobi)/i.test(ua)) return \"phone\";\n  return \"desktop\";\n}\nfunction detectOS(os) {\n  if (!isBrowser) return false;\n  return getUserAgentOS(window.navigator) === os;\n}\nfunction detectBrowser(browser) {\n  if (!isBrowser) return false;\n  return getUserAgentBrowser(window.navigator) === browser;\n}\nfunction detectTouch() {\n  if (!isBrowser) return false;\n  return window.ontouchstart === null && window.ontouchmove === null && window.ontouchend === null;\n}\n\nfunction walkObject(target, predicate) {\n  function inner(value, path) {\n    if (path === void 0) {\n      path = [];\n    }\n\n    if (isArray(value)) {\n      return value.map(function (item, index) {\n        return inner(item, [].concat(path, [String(index)]));\n      });\n    }\n\n    if (isObject(value)) {\n      return fromEntries(Object.entries(value).map(function (_ref) {\n        var key = _ref[0],\n            child = _ref[1];\n        return [key, inner(child, [].concat(path, [key]))];\n      }));\n    }\n\n    return predicate(value, path);\n  }\n\n  return inner(target);\n}\n\nexport { PanSession, __DEV__, __TEST__, addDomEvent, addItem, addPointerEvent, analyzeBreakpoints, ariaAttr, arrayToObjectNotation, breakpoints, callAll, callAllHandlers, canUseDOM, chunk, clampValue, closest, compose, contains, countDecimalPlaces, cx, dataAttr, detectBrowser, detectDeviceType, detectOS, detectTouch, determineLazyBehavior, distance, error, extractEventInfo, filterUndefined, focus, focusNextTabbable, focusPreviousTabbable, fromEntries, get, getActiveElement, getAllFocusable, getAllTabbable, getCSSVar, getEventWindow, getFirstFocusable, getFirstItem, getFirstTabbableIn, getLastItem, getLastTabbableIn, getNextIndex, getNextItem, getNextItemFromSearch, getNextTabbable, getOwnerDocument, getOwnerWindow, getPointerEventName, getPrevIndex, getPrevItem, getPreviousTabbable, getRelatedTarget, getViewportPointFromEvent, getWithDefault, hasDisplayNone, hasFocusWithin, hasNegativeTabIndex, hasTabIndex, isActiveElement, isArray, isBrowser, isContentEditable, isCssVar, isCustomBreakpoint, isDefined, isDisabled, isElement, isEmpty, isEmptyArray, isEmptyObject, isFocusable, isFunction, isHTMLElement, isHidden, isInputElement, isInputEvent, isMouseEvent, isMultiTouchEvent, isNotEmptyObject, isNotNumber, isNull, isNumber, isNumeric, isObject, isRefObject, isResponsiveObjectLike, isRightClick, isString, isTabbable, isTouchEvent, isUndefined, mapResponsive, maxSafeInteger, memoize, memoizedGet, minSafeInteger, noop, normalizeEventKey, objectFilter, objectKeys, objectToArrayNotation, omit, once, percentToValue, pick, pipe, px, removeIndex, removeItem, roundValueToStep, runIfFn, split, toPrecision, valueToPercent, walkObject, warn, wrapPointerEventHandler };\n","import { forwardRef, chakra } from '@chakra-ui/system';\nimport { cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"as\", \"viewBox\", \"color\", \"focusable\", \"children\", \"className\", \"__css\"];\nvar fallbackIcon = {\n  path: /*#__PURE__*/React.createElement(\"g\", {\n    stroke: \"currentColor\",\n    strokeWidth: \"1.5\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    fill: \"none\",\n    d: \"M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    strokeLinecap: \"round\",\n    d: \"M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    fill: \"none\",\n    strokeMiterlimit: \"10\",\n    cx: \"12\",\n    cy: \"12\",\n    r: \"11.25\"\n  })),\n  viewBox: \"0 0 24 24\"\n};\nvar Icon = /*#__PURE__*/forwardRef(function (props, ref) {\n  var element = props.as,\n      viewBox = props.viewBox,\n      _props$color = props.color,\n      color = _props$color === void 0 ? \"currentColor\" : _props$color,\n      _props$focusable = props.focusable,\n      focusable = _props$focusable === void 0 ? false : _props$focusable,\n      children = props.children,\n      className = props.className,\n      __css = props.__css,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _className = cx(\"chakra-icon\", className);\n\n  var styles = _extends({\n    w: \"1em\",\n    h: \"1em\",\n    display: \"inline-block\",\n    lineHeight: \"1em\",\n    flexShrink: 0,\n    color: color\n  }, __css);\n\n  var shared = {\n    ref: ref,\n    focusable: focusable,\n    className: _className,\n    __css: styles\n  };\n\n  var _viewBox = viewBox != null ? viewBox : fallbackIcon.viewBox;\n  /**\n   * If you're using an icon library like `react-icons`.\n   * Note: anyone passing the `as` prop, should manage the `viewBox` from the external component\n   */\n\n\n  if (element && typeof element !== \"string\") {\n    return /*#__PURE__*/React.createElement(chakra.svg, _extends({\n      as: element\n    }, shared, rest));\n  }\n\n  var _path = children != null ? children : fallbackIcon.path;\n\n  return /*#__PURE__*/React.createElement(chakra.svg, _extends({\n    verticalAlign: \"middle\",\n    viewBox: _viewBox\n  }, shared, rest), _path);\n});\n\nif (__DEV__) {\n  Icon.displayName = \"Icon\";\n}\n\nvar Icon$1 = Icon;\n\nfunction createIcon(options) {\n  var _options$viewBox = options.viewBox,\n      viewBox = _options$viewBox === void 0 ? \"0 0 24 24\" : _options$viewBox,\n      pathDefinition = options.d,\n      path = options.path,\n      displayName = options.displayName,\n      _options$defaultProps = options.defaultProps,\n      defaultProps = _options$defaultProps === void 0 ? {} : _options$defaultProps;\n  var Comp = /*#__PURE__*/forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(Icon, _extends({\n      ref: ref,\n      viewBox: viewBox\n    }, defaultProps, props), path != null ? path : /*#__PURE__*/React.createElement(\"path\", {\n      fill: \"currentColor\",\n      d: pathDefinition\n    }));\n  });\n\n  if (__DEV__) {\n    Comp.displayName = displayName;\n  }\n\n  return Comp;\n}\n\nexport { Icon, createIcon, Icon$1 as default };\n","import { useFormControlProps } from '@chakra-ui/form-control';\nimport { forwardRef, useMultiStyleConfig, omitThemingProps, StylesProvider, chakra, useStyles } from '@chakra-ui/system';\nimport { normalizeEventKey, isNull, focus, isBrowser, callAllHandlers, ariaAttr, minSafeInteger, maxSafeInteger, cx, __DEV__ } from '@chakra-ui/utils';\nimport { mergeRefs, createContext } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport { useState, useRef, useCallback } from 'react';\nimport { Icon } from '@chakra-ui/icon';\nimport { useCounter } from '@chakra-ui/counter';\nimport { useInterval, useUnmountEffect, useCallbackRef, useBoolean, useSafeLayoutEffect, useEventListener } from '@chakra-ui/hooks';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar TriangleDownIcon = function TriangleDownIcon(props) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    viewBox: \"0 0 24 24\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M21,5H3C2.621,5,2.275,5.214,2.105,5.553C1.937,5.892,1.973,6.297,2.2,6.6l9,12 c0.188,0.252,0.485,0.4,0.8,0.4s0.611-0.148,0.8-0.4l9-12c0.228-0.303,0.264-0.708,0.095-1.047C21.725,5.214,21.379,5,21,5z\"\n  }));\n};\nvar TriangleUpIcon = function TriangleUpIcon(props) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    viewBox: \"0 0 24 24\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M12.8,5.4c-0.377-0.504-1.223-0.504-1.6,0l-9,12c-0.228,0.303-0.264,0.708-0.095,1.047 C2.275,18.786,2.621,19,3,19h18c0.379,0,0.725-0.214,0.895-0.553c0.169-0.339,0.133-0.744-0.095-1.047L12.8,5.4z\"\n  }));\n};\n\n/**\n * When click and hold on a button - the speed of auto changing the value.\n */\n\nvar CONTINUOUS_CHANGE_INTERVAL = 50;\n/**\n * When click and hold on a button - the delay before auto changing the value.\n */\n\nvar CONTINUOUS_CHANGE_DELAY = 300;\n\n/**\n * React hook used in the number input to spin its\n * value on long press of the spin buttons\n *\n * @param increment the function to increment\n * @param decrement the function to decrement\n */\nfunction useSpinner(increment, decrement) {\n  /**\n   * To keep incrementing/decrementing on press, we call that `spinning`\n   */\n  var _useState = useState(false),\n      isSpinning = _useState[0],\n      setIsSpinning = _useState[1]; // This state keeps track of the action (\"increment\" or \"decrement\")\n\n\n  var _useState2 = useState(null),\n      action = _useState2[0],\n      setAction = _useState2[1]; // To increment the value the first time you mousedown, we call that `runOnce`\n\n\n  var _useState3 = useState(true),\n      runOnce = _useState3[0],\n      setRunOnce = _useState3[1]; // Store the timeout instance id in a ref, so we can clear the timeout later\n\n\n  var timeoutRef = useRef(null); // Clears the timeout from memory\n\n  var removeTimeout = function removeTimeout() {\n    return clearTimeout(timeoutRef.current);\n  };\n  /**\n   * useInterval hook provides a performant way to\n   * update the state value at specific interval\n   */\n\n\n  useInterval(function () {\n    if (action === \"increment\") {\n      increment();\n    }\n\n    if (action === \"decrement\") {\n      decrement();\n    }\n  }, isSpinning ? CONTINUOUS_CHANGE_INTERVAL : null); // Function to activate the spinning and increment the value\n\n  var up = useCallback(function () {\n    // increment the first fime\n    if (runOnce) {\n      increment();\n    } // after a delay, keep incrementing at interval (\"spinning up\")\n\n\n    timeoutRef.current = setTimeout(function () {\n      setRunOnce(false);\n      setIsSpinning(true);\n      setAction(\"increment\");\n    }, CONTINUOUS_CHANGE_DELAY);\n  }, [increment, runOnce]); // Function to activate the spinning and increment the value\n\n  var down = useCallback(function () {\n    // decrement the first fime\n    if (runOnce) {\n      decrement();\n    } // after a delay, keep decrementing at interval (\"spinning down\")\n\n\n    timeoutRef.current = setTimeout(function () {\n      setRunOnce(false);\n      setIsSpinning(true);\n      setAction(\"decrement\");\n    }, CONTINUOUS_CHANGE_DELAY);\n  }, [decrement, runOnce]); // Function to stop spinng (useful for mouseup, keyup handlers)\n\n  var stop = useCallback(function () {\n    setRunOnce(true);\n    setIsSpinning(false);\n    removeTimeout();\n  }, []);\n  /**\n   * If the component unmounts while spinning,\n   * let's clear the timeout as well\n   */\n\n  useUnmountEffect(removeTimeout);\n  return {\n    up: up,\n    down: down,\n    stop: stop\n  };\n}\n\nvar FLOATING_POINT_REGEX = /^[Ee0-9+\\-.]$/;\n/**\n * Determine if a character is a DOM floating point character\n * @see https://www.w3.org/TR/2012/WD-html-markup-20120329/datatypes.html#common.data.float\n */\n\nfunction isFloatingPointNumericCharacter(character) {\n  return FLOATING_POINT_REGEX.test(character);\n}\n/**\n * Determine if the event is a valid numeric keyboard event.\n * We use this so we can prevent non-number characters in the input\n */\n\nfunction isValidNumericKeyboardEvent(event) {\n  if (event.key == null) return true;\n  var isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n\n  if (isModifierKey) {\n    return true;\n  }\n\n  var isSingleCharacterKey = event.key.length === 1;\n\n  if (!isSingleCharacterKey) {\n    return true;\n  }\n\n  return isFloatingPointNumericCharacter(event.key);\n}\n\nvar _excluded$1 = [\"focusInputOnChange\", \"clampValueOnBlur\", \"keepWithinRange\", \"min\", \"max\", \"step\", \"isReadOnly\", \"isDisabled\", \"isRequired\", \"getAriaValueText\", \"isInvalid\", \"pattern\", \"inputMode\", \"allowMouseWheel\", \"id\", \"onChange\", \"precision\", \"name\", \"aria-describedby\", \"aria-label\", \"aria-labelledby\", \"onFocus\", \"onBlur\"];\n\nvar sanitize = function sanitize(value) {\n  return value.split(\"\").filter(isFloatingPointNumericCharacter).join(\"\");\n};\n/**\n * React hook that implements the WAI-ARIA Spin Button widget\n * and used to create numeric input fields.\n *\n * It returns prop getters you can use to build your own\n * custom number inputs.\n *\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.1/#spinbutton\n * @see Docs     https://www.chakra-ui.com/useNumberInput\n * @see WHATWG   https://html.spec.whatwg.org/multipage/input.html#number-state-(type=number)\n */\n\n\nfunction useNumberInput(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      _props$focusInputOnCh = _props.focusInputOnChange,\n      focusInputOnChange = _props$focusInputOnCh === void 0 ? true : _props$focusInputOnCh,\n      _props$clampValueOnBl = _props.clampValueOnBlur,\n      clampValueOnBlur = _props$clampValueOnBl === void 0 ? true : _props$clampValueOnBl,\n      _props$keepWithinRang = _props.keepWithinRange,\n      keepWithinRange = _props$keepWithinRang === void 0 ? true : _props$keepWithinRang,\n      _props$min = _props.min,\n      min = _props$min === void 0 ? minSafeInteger : _props$min,\n      _props$max = _props.max,\n      max = _props$max === void 0 ? maxSafeInteger : _props$max,\n      _props$step = _props.step,\n      stepProp = _props$step === void 0 ? 1 : _props$step,\n      isReadOnly = _props.isReadOnly,\n      isDisabled = _props.isDisabled,\n      isRequired = _props.isRequired,\n      getAriaValueText = _props.getAriaValueText,\n      isInvalid = _props.isInvalid,\n      _props$pattern = _props.pattern,\n      pattern = _props$pattern === void 0 ? \"[0-9]*(.[0-9]+)?\" : _props$pattern,\n      _props$inputMode = _props.inputMode,\n      inputMode = _props$inputMode === void 0 ? \"decimal\" : _props$inputMode,\n      allowMouseWheel = _props.allowMouseWheel,\n      id = _props.id;\n      _props.onChange;\n      _props.precision;\n      var name = _props.name,\n      ariaDescBy = _props[\"aria-describedby\"],\n      ariaLabel = _props[\"aria-label\"],\n      ariaLabelledBy = _props[\"aria-labelledby\"],\n      onFocus = _props.onFocus,\n      onBlur = _props.onBlur,\n      htmlProps = _objectWithoutPropertiesLoose(_props, _excluded$1);\n\n  var onFocusProp = useCallbackRef(onFocus);\n  var onBlurProp = useCallbackRef(onBlur);\n  var getAriaValueTextProp = useCallbackRef(getAriaValueText);\n  /**\n   * Leverage the `useCounter` hook since it provides\n   * the functionality to `increment`, `decrement` and `update`\n   * counter values\n   */\n\n  var counter = useCounter(props);\n  var updateFn = counter.update,\n      incrementFn = counter.increment,\n      decrementFn = counter.decrement;\n  /**\n   * Keep track of the focused state of the input,\n   * so user can this to change the styles of the\n   * `spinners`, maybe :)\n   */\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocused = _useBoolean[1];\n\n  var inputRef = React.useRef(null);\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   */\n\n  useSafeLayoutEffect(function () {\n    if (!inputRef.current) return;\n    var notInSync = inputRef.current.value != counter.value;\n\n    if (notInSync) {\n      counter.setValue(sanitize(inputRef.current.value));\n    }\n  }, []);\n  var isInteractive = !(isReadOnly || isDisabled);\n  var increment = React.useCallback(function (step) {\n    if (step === void 0) {\n      step = stepProp;\n    }\n\n    if (isInteractive) {\n      incrementFn(step);\n    }\n  }, [incrementFn, isInteractive, stepProp]);\n  var decrement = React.useCallback(function (step) {\n    if (step === void 0) {\n      step = stepProp;\n    }\n\n    if (isInteractive) {\n      decrementFn(step);\n    }\n  }, [decrementFn, isInteractive, stepProp]);\n  /**\n   * Leverage the `useSpinner` hook to spin the input's value\n   * when long press on the up and down buttons.\n   *\n   * This leverages `setInterval` internally\n   */\n\n  var spinner = useSpinner(increment, decrement);\n  /**\n   * The `onChange` handler filters out any character typed\n   * that isn't floating point compatible.\n   */\n\n  var onChange = React.useCallback(function (event) {\n    updateFn(sanitize(event.target.value));\n  }, [updateFn]);\n  var onKeyDown = React.useCallback(function (event) {\n    /**\n     * only allow valid numeric keys\n     */\n    if (!isValidNumericKeyboardEvent(event)) {\n      event.preventDefault();\n    }\n    /**\n     * Keyboard Accessibility\n     *\n     * We want to increase or decrease the input's value\n     * based on if the user the arrow keys.\n     *\n     * @see https://www.w3.org/TR/wai-aria-practices-1.1/#keyboard-interaction-17\n     */\n\n\n    var stepFactor = getStepFactor(event) * stepProp;\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      ArrowUp: function ArrowUp() {\n        return increment(stepFactor);\n      },\n      ArrowDown: function ArrowDown() {\n        return decrement(stepFactor);\n      },\n      Home: function Home() {\n        return updateFn(min);\n      },\n      End: function End() {\n        return updateFn(max);\n      }\n    };\n    var action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [updateFn, decrement, increment, max, min, stepProp]);\n\n  var getStepFactor = function getStepFactor(event) {\n    var ratio = 1;\n\n    if (event.metaKey || event.ctrlKey) {\n      ratio = 0.1;\n    }\n\n    if (event.shiftKey) {\n      ratio = 10;\n    }\n\n    return ratio;\n  };\n  /**\n   * If user would like to use a human-readable representation\n   * of the value, rather than the value itself they can pass `getAriaValueText`\n   *\n   * @see https://www.w3.org/TR/wai-aria-practices-1.1/#wai-aria-roles-states-and-properties-18\n   * @see https://www.w3.org/TR/wai-aria-1.1/#aria-valuetext\n   */\n\n\n  var ariaValueText = React.useMemo(function () {\n    var text = getAriaValueTextProp == null ? void 0 : getAriaValueTextProp(counter.value);\n\n    if (!isNull(text)) {\n      return text;\n    }\n\n    var defaultText = counter.value.toString(); // empty string is an invalid ARIA attribute value\n\n    return !defaultText ? undefined : defaultText;\n  }, [counter.value, getAriaValueTextProp]);\n  /**\n   * Function that clamps the input's value on blur\n   */\n\n  var validateAndClamp = React.useCallback(function () {\n    var next = counter.value;\n    if (next === \"\") return;\n\n    if (counter.valueAsNumber < min) {\n      next = min;\n    }\n\n    if (counter.valueAsNumber > max) {\n      next = max;\n    }\n    /**\n     * `counter.cast` does 2 things:\n     *\n     * - sanitize the value by using parseFloat and some Regex\n     * - used to round value to computed precision or decimal points\n     */\n\n\n    counter.cast(next);\n  }, [counter, max, min]);\n  var onInputBlur = React.useCallback(function () {\n    setFocused.off();\n\n    if (clampValueOnBlur) {\n      validateAndClamp();\n    }\n  }, [clampValueOnBlur, setFocused, validateAndClamp]);\n  var focusInput = React.useCallback(function () {\n    if (focusInputOnChange) {\n      focus(inputRef.current, {\n        nextTick: true\n      });\n    }\n  }, [focusInputOnChange]);\n  var spinUp = React.useCallback(function (event) {\n    event.preventDefault();\n    spinner.up();\n    focusInput();\n  }, [focusInput, spinner]);\n  var spinDown = React.useCallback(function (event) {\n    event.preventDefault();\n    spinner.down();\n    focusInput();\n  }, [focusInput, spinner]);\n  var pointerDown = isBrowser && !!document.documentElement.ontouchstart ? \"onTouchStart\" : \"onMouseDown\";\n  useEventListener(\"wheel\", function (event) {\n    var isInputFocused = document.activeElement === inputRef.current;\n    if (!allowMouseWheel || !isInputFocused) return;\n    event.preventDefault();\n    var stepFactor = getStepFactor(event) * stepProp;\n    var direction = Math.sign(event.deltaY);\n\n    if (direction === -1) {\n      increment(stepFactor);\n    } else if (direction === 1) {\n      decrement(stepFactor);\n    }\n  }, inputRef.current, {\n    passive: false\n  });\n  var getIncrementButtonProps = React.useCallback(function (props, ref) {\n    var _extends2;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    var disabled = isDisabled || keepWithinRange && counter.isAtMax;\n    return _extends({}, props, (_extends2 = {\n      ref: ref,\n      role: \"button\",\n      tabIndex: -1\n    }, _extends2[pointerDown] = callAllHandlers(props[pointerDown], spinUp), _extends2.onMouseUp = callAllHandlers(props.onMouseUp, spinner.stop), _extends2.onMouseLeave = callAllHandlers(props.onMouseUp, spinner.stop), _extends2.onTouchEnd = callAllHandlers(props.onTouchEnd, spinner.stop), _extends2.disabled = disabled, _extends2[\"aria-disabled\"] = ariaAttr(disabled), _extends2));\n  }, [pointerDown, counter.isAtMax, keepWithinRange, spinUp, spinner.stop, isDisabled]);\n  var getDecrementButtonProps = React.useCallback(function (props, ref) {\n    var _extends3;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    var disabled = isDisabled || keepWithinRange && counter.isAtMin;\n    return _extends({}, props, (_extends3 = {\n      ref: ref,\n      role: \"button\",\n      tabIndex: -1\n    }, _extends3[pointerDown] = callAllHandlers(props[pointerDown], spinDown), _extends3.onMouseLeave = callAllHandlers(props.onMouseLeave, spinner.stop), _extends3.onMouseUp = callAllHandlers(props.onMouseUp, spinner.stop), _extends3.onTouchEnd = callAllHandlers(props.onTouchEnd, spinner.stop), _extends3.disabled = disabled, _extends3[\"aria-disabled\"] = ariaAttr(disabled), _extends3));\n  }, [pointerDown, counter.isAtMin, keepWithinRange, spinDown, spinner.stop, isDisabled]);\n  var getInputProps = React.useCallback(function (props, ref) {\n    var _props$readOnly, _props$readOnly2, _props$required, _props$required2;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({\n      name: name,\n      inputMode: inputMode,\n      type: \"text\",\n      pattern: pattern,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-label\": ariaLabel,\n      \"aria-describedby\": ariaDescBy,\n      id: id,\n      disabled: isDisabled\n    }, props, {\n      readOnly: (_props$readOnly = props.readOnly) != null ? _props$readOnly : isReadOnly,\n      \"aria-readonly\": (_props$readOnly2 = props.readOnly) != null ? _props$readOnly2 : isReadOnly,\n      \"aria-required\": (_props$required = props.required) != null ? _props$required : isRequired,\n      required: (_props$required2 = props.required) != null ? _props$required2 : isRequired,\n      ref: mergeRefs(inputRef, ref),\n      value: counter.value,\n      role: \"spinbutton\",\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": Number.isNaN(counter.valueAsNumber) ? undefined : counter.valueAsNumber,\n      \"aria-invalid\": ariaAttr(isInvalid != null ? isInvalid : counter.isOutOfRange),\n      \"aria-valuetext\": ariaValueText,\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      onChange: callAllHandlers(props.onChange, onChange),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props.onFocus, onFocusProp, setFocused.on),\n      onBlur: callAllHandlers(props.onBlur, onBlurProp, onInputBlur)\n    });\n  }, [name, inputMode, pattern, ariaLabelledBy, ariaLabel, ariaDescBy, id, isDisabled, isRequired, isReadOnly, isInvalid, counter.value, counter.valueAsNumber, counter.isOutOfRange, min, max, ariaValueText, onChange, onKeyDown, onFocusProp, setFocused.on, onBlurProp, onInputBlur]);\n  return {\n    value: counter.value,\n    valueAsNumber: counter.valueAsNumber,\n    isFocused: isFocused,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    getIncrementButtonProps: getIncrementButtonProps,\n    getDecrementButtonProps: getDecrementButtonProps,\n    getInputProps: getInputProps,\n    htmlProps: htmlProps\n  };\n}\n\nvar _excluded = [\"htmlProps\"];\n\n/**\n * React context used to communicate between components\n */\nvar _createContext = createContext({\n  name: \"NumberInputContext\",\n  errorMessage: \"useNumberInputContext: `context` is undefined. Seems you forgot to wrap number-input's components within <NumberInput />\"\n}),\n    NumberInputProvider = _createContext[0],\n    useNumberInputContext = _createContext[1];\n\n/**\n * NumberInput\n *\n * React component that provides context and logic to all\n * number input sub-components.\n *\n * It renders a `div` by default.\n *\n * @see Docs http://chakra-ui.com/numberinput\n */\nvar NumberInput = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"NumberInput\", props);\n  var ownProps = omitThemingProps(props);\n  var controlProps = useFormControlProps(ownProps);\n\n  var _useNumberInput = useNumberInput(controlProps),\n      htmlProps = _useNumberInput.htmlProps,\n      context = _objectWithoutPropertiesLoose(_useNumberInput, _excluded);\n\n  var ctx = React.useMemo(function () {\n    return context;\n  }, [context]);\n  return /*#__PURE__*/React.createElement(NumberInputProvider, {\n    value: ctx\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, htmlProps, {\n    ref: ref,\n    className: cx(\"chakra-numberinput\", props.className),\n    __css: _extends({\n      position: \"relative\",\n      zIndex: 0\n    }, styles.root)\n  }))));\n});\n\nif (__DEV__) {\n  NumberInput.displayName = \"NumberInput\";\n}\n\n/**\n * NumberInputStepper\n *\n * React component used to group the increment and decrement\n * button spinners.\n *\n * It renders a `div` by default.\n *\n * @see Docs http://chakra-ui.com/components/number-input\n */\nvar NumberInputStepper = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    \"aria-hidden\": true,\n    ref: ref\n  }, props, {\n    __css: _extends({\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"absolute\",\n      top: \"0\",\n      insetEnd: \"0px\",\n      margin: \"1px\",\n      height: \"calc(100% - 2px)\",\n      zIndex: 1\n    }, styles.stepperGroup)\n  }));\n});\n\nif (__DEV__) {\n  NumberInputStepper.displayName = \"NumberInputStepper\";\n}\n\n/**\n * NumberInputField\n *\n * React component that represents the actual `input` field\n * where users can type to edit numeric values.\n *\n * It renders an `input` by default and ensures only numeric\n * values can be typed.\n *\n * @see Docs http://chakra-ui.com/numberinput\n */\nvar NumberInputField = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _useNumberInputContex = useNumberInputContext(),\n      getInputProps = _useNumberInputContex.getInputProps;\n\n  var input = getInputProps(props, ref);\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.input, _extends({}, input, {\n    className: cx(\"chakra-numberinput__field\", props.className),\n    __css: _extends({\n      width: \"100%\"\n    }, styles.field)\n  }));\n});\n\nif (__DEV__) {\n  NumberInputField.displayName = \"NumberInputField\";\n}\n\nvar StyledStepper = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flex: 1,\n    transitionProperty: \"common\",\n    transitionDuration: \"normal\",\n    userSelect: \"none\",\n    cursor: \"pointer\",\n    lineHeight: \"normal\"\n  }\n});\n\n/**\n * NumberDecrementStepper\n *\n * React component used to decrement the number input's value\n *\n * It renders a `div` with `role=button` by default\n */\nvar NumberDecrementStepper = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _props$children;\n\n  var styles = useStyles();\n\n  var _useNumberInputContex2 = useNumberInputContext(),\n      getDecrementButtonProps = _useNumberInputContex2.getDecrementButtonProps;\n\n  var decrement = getDecrementButtonProps(props, ref);\n  return /*#__PURE__*/React.createElement(StyledStepper, _extends({}, decrement, {\n    __css: styles.stepper\n  }), (_props$children = props.children) != null ? _props$children : /*#__PURE__*/React.createElement(TriangleDownIcon, null));\n});\n\nif (__DEV__) {\n  NumberDecrementStepper.displayName = \"NumberDecrementStepper\";\n}\n\n/**\n * NumberIncrementStepper\n *\n * React component used to increment the number input's value\n *\n * It renders a `div` with `role=button` by default\n */\nvar NumberIncrementStepper = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _props$children2;\n\n  var _useNumberInputContex3 = useNumberInputContext(),\n      getIncrementButtonProps = _useNumberInputContex3.getIncrementButtonProps;\n\n  var increment = getIncrementButtonProps(props, ref);\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(StyledStepper, _extends({}, increment, {\n    __css: styles.stepper\n  }), (_props$children2 = props.children) != null ? _props$children2 : /*#__PURE__*/React.createElement(TriangleUpIcon, null));\n});\n\nif (__DEV__) {\n  NumberIncrementStepper.displayName = \"NumberIncrementStepper\";\n}\n\nexport { NumberDecrementStepper, NumberIncrementStepper, NumberInput, NumberInputField, NumberInputStepper, StyledStepper, useNumberInput };\n"],"sourceRoot":""}